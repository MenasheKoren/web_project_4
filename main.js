(()=>{"use strict";var e={inputSelector:".field-input",submitButtonSelector:".popup__save"},t=document.querySelector(".popup_type_edit-profile"),n=document.querySelector(".popup_type_add-card"),r=document.querySelector(".popup_type_edit-avatar"),o=(document.querySelector(".card-template").content.querySelector(".card"),document.querySelector(".card-list"),document.querySelectorAll(".card"),document.querySelector(".popup_type_edit-profile")),i=document.querySelector(".popup_type_add-card"),a=document.querySelector(".popup_type_image"),c=(document.querySelector(".popup_opened"),o.querySelector(".popup__close"),i.querySelector(".popup__close"),a.querySelector(".popup__close"),document.querySelector(".edit-button")),u=document.querySelector(".add-button"),l=document.querySelector(".avatar"),s=document.querySelector(".popup__save"),f=o.querySelector(".field-input_type_name"),p=o.querySelector(".field-input_type_profession"),d=(i.querySelector(".field-input_type_card-title"),i.querySelector(".field-input_type_card-link"),document.querySelector(".edit-name"),document.querySelector(".profile-info__profession"),document.querySelectorAll(".field-input"),o.querySelector(".popup__form"),i.querySelector(".popup__form"),a.querySelector(".popup__figure"),a.querySelector(".popup__image"),a.querySelector(".popup__caption"),function(e,t){return fetch(e,t).then((function(e){return e.ok?e.json():Promise.reject(e.statusText)}))});function y(e){s.textContent=e}function h(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var _=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._container=document.querySelector(n),this._renderer=r}var t,n;return t=e,(n=[{key:"renderer",value:function(e){var t=this;e.length&&e.forEach((function(e){t._renderer(e)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&h(t.prototype,n),e}();function m(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var v=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popupElement=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"open",value:function(){this._popupElement.classList.add("popup_opened"),document.addEventListener("keyup",this._handleEscClose)}},{key:"close",value:function(){this._popupElement.classList.remove("popup_opened"),document.removeEventListener("keyup",this._handleEscClose)}},{key:"setEventListeners",value:function(){var e=this;this._popupElement.addEventListener("click",(function(t){!t.target.classList.contains("popup__close")&&t.target.closest(".popup__container")||e.close()}))}}])&&m(t.prototype,n),e}();function b(e){return b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},b(e)}function E(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function S(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function g(e,t,n){return g="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=O(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}},g(e,t,n||e)}function k(e,t){return k=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},k(e,t)}function w(e,t){if(t&&("object"===b(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function O(e){return O=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},O(e)}var q=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&k(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=O(r);if(o){var n=O(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return w(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._handleSubmit=t,n._form=n._popupElement.querySelector(".popup__form"),n}return t=a,(n=[{key:"_getInputValues",value:function(){var e,t=function(e){if(Array.isArray(e))return E(e)}(e=this._form.querySelectorAll(".field-input"))||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(e){if("string"==typeof e)return E(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?E(e,t):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),n={};return t.forEach((function(e){n[e.name]=e.value})),n}},{key:"setEventListeners",value:function(){var e=this;g(O(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._handleSubmit(e._getInputValues())}))}},{key:"close",value:function(){g(O(a.prototype),"close",this).call(this),this._form.reset()}}])&&S(t.prototype,n),a}(v);function j(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function L(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var C=function(){function e(t,n){var r,o,i=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),o=function(){var e,t=i._settings.inputSelector;i.inputs=function(e){if(Array.isArray(e))return j(e)}(e=i._formElement.querySelectorAll(t))||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(e){if("string"==typeof e)return j(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?j(e,t):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),i.inputs.forEach((function(e){e.addEventListener("input",(function(){i._checkValidity(e),i._toggleButtonState(i.inputs)}))}))},(r="_setEventListeners")in this?Object.defineProperty(this,r,{value:o,enumerable:!0,configurable:!0,writable:!0}):this[r]=o,this._settings=t,this._formElement=n}var t,n;return t=e,(n=[{key:"_showError",value:function(e){var t=e.validationMessage;this._formElement.querySelector("#".concat(e.id,"-error")).textContent=t}},{key:"_hideError",value:function(e){this._formElement.querySelector("#".concat(e.id,"-error")).textContent=""}},{key:"_checkValidity",value:function(e){e.validity.valid?this._hideError(e):this._showError(e)}},{key:"_toggleButtonState",value:function(){var e=this._settings.submitButtonSelector,t=this._formElement.querySelector(e),n=this.inputs.every((function(e){return e.validity.valid}));t.disabled=!n}},{key:"resetValidation",value:function(){var e=this;this.inputs.forEach((function(t){e._hideError(t)}))}},{key:"enableValidation",value:function(){this._formElement.addEventListener("submit",(function(e){return e.preventDefault()})),this._setEventListeners()}}])&&L(t.prototype,n),e}();function P(e){return P="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},P(e)}function I(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function A(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function T(e,t,n){return T="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=x(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}},T(e,t,n||e)}function R(e,t){return R=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},R(e,t)}function U(e,t){if(t&&("object"===P(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function x(e){return x=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},x(e)}var B=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&R(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=x(r);if(o){var n=x(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return U(this,e)});function a(){return I(this,a),i.apply(this,arguments)}return t=a,(n=[{key:"open",value:function(e,t){var n=this._popupElement.querySelector(".popup__image"),r=this._popupElement.querySelector(".popup__caption");n.src=e,n.alt=t,r.textContent=t,T(x(a.prototype),"open",this).call(this),T(x(a.prototype),"setEventListeners",this).call(this)}}])&&A(t.prototype,n),a}(v);function D(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var V=function(){function e(t,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._userNameElement=document.querySelector(t),this._userProfessionElement=document.querySelector(n),this._avatarSelectorElement=document.querySelector(r)}var t,n;return t=e,n=[{key:"getUserInfo",value:function(){return{userName:this._userNameElement.textContent,userProfession:this._userProfessionElement.textContent,userAvatar:this._avatarSelectorElement.src}}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.about,r=e.avatar;this._userNameElement.textContent=t,this._userProfessionElement.textContent=n,this._avatarSelectorElement.src=r}}],n&&D(t.prototype,n),e}();function N(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var M=new(function(){function e(t){var n=t.baseUrl,r=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=n,this._headers=r}var t,n;return t=e,(n=[{key:"getInitialCards",value:function(){return d("".concat(this._baseUrl,"/cards"),{headers:this._headers})}},{key:"getUserInfo",value:function(){return d("".concat(this._baseUrl,"/users/me"),{headers:this._headers})}},{key:"editUserInfo",value:function(e){return d("".concat(this._baseUrl,"/users/me"),{headers:this._headers,method:"PATCH",body:JSON.stringify(e)})}},{key:"editAvatar",value:function(e){return d("".concat(this._baseUrl,"/users/me/avatar"),{headers:this._headers,method:"PATCH",body:JSON.stringify({avatar:e})})}},{key:"createCard",value:function(e){return d("".concat(this._baseUrl,"/cards"),{headers:this._headers,method:"POST",body:JSON.stringify(e)})}},{key:"deleteCard",value:function(e){return d("".concat(this._baseUrl,"/cards/").concat(e),{headers:this._headers,method:"DELETE"})}},{key:"addLikes",value:function(e){return d("".concat(this._baseUrl,"/cards/likes/").concat(e),{headers:this._headers,method:"PUT"})}},{key:"removeLikes",value:function(e){return d("".concat(this._baseUrl,"/cards/likes/").concat(e),{headers:this._headers,method:"DELETE"})}}])&&N(t.prototype,n),e}())({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"a422b90c-eef7-4772-9177-7c895e07d221","Content-Type":"application/json"}});function J(e){return J="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},J(e)}function $(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function H(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function z(e,t,n){return z="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=G(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}},z(e,t,n||e)}function Y(e,t){return Y=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},Y(e,t)}function F(e,t){if(t&&("object"===J(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function G(e){return G=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},G(e)}var K=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Y(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=G(r);if(o){var n=G(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return F(this,e)});function a(){return $(this,a),i.apply(this,arguments)}return t=a,(n=[{key:"setAction",value:function(e){this._handleSubmit=e}},{key:"setEventListeners",value:function(){var e=this;this._popupElement.addEventListener("submit",(function(t){t.preventDefault(),e._handleSubmit()})),z(G(a.prototype),"setEventListeners",this).call(this)}}])&&H(t.prototype,n),a}(v);function Q(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var W,X=function(){function e(t,n,r,o,i,a){var c,u,l=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),u=function(){return l._cardElement=l._cardTemplate.cloneNode(!0),l._cardTitle=l._cardElement.querySelector(".card__location"),l._cardImage=l._cardElement.querySelector(".card__image"),l._cardTitle.textContent=l._name,l._cardImage.src=l._link,l._cardImage.alt=l._name,l._ownerId!==l._userId&&(l._cardElement.querySelector(".card__remove").style.display="none"),l._renderLikes(),l._setEventListeners(),l._cardElement},(c="createCardElement")in this?Object.defineProperty(this,c,{value:u,enumerable:!0,configurable:!0,writable:!0}):this[c]=u,this._name=t.name,this._link=t.link,this._likes=t.likes,this._templateCardSelector=n,this._handleCardClick=r,this._handleRemoveCard=i,this._handleLikeButton=o,this._id=t._id,this._userId=a,this._ownerId=t.owner._id,this._cardTemplate=document.querySelector(n).content.querySelector(".card")}var t,n;return t=e,(n=[{key:"isLiked",value:function(){var e=this;return this._likes.some((function(t){return t._id===e._userId}))}},{key:"_renderLikes",value:function(){this._cardElement.querySelector(".card__likes-count").textContent=this._likes.length,this.isLiked()?this._cardElement.querySelector(".card__like").classList.add("button_filled"):this._cardElement.querySelector(".card__like").classList.remove("button_filled")}},{key:"addLikes",value:function(e){this._likes=e,this._renderLikes()}},{key:"removeCard",value:function(){this._cardElement.remove(),this._cardElement=null}},{key:"_setEventListeners",value:function(){var e=this;this._cardImage=this._cardElement.querySelector(".card__image"),this._removeButton=this._cardElement.querySelector(".card__remove"),this._likeButton=this._cardElement.querySelector(".card__like"),this._likeButton.addEventListener("click",(function(){return e._handleLikeButton(e._id)})),this._removeButton.addEventListener("click",(function(){return e._handleRemoveCard(e._id)})),this._cardImage.addEventListener("click",this._handleCardClick)}}])&&Q(t.prototype,n),e}();function Z(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}Promise.all([M.getInitialCards(),M.getUserInfo()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,c=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){c=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(c)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return Z(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Z(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];W=i._id,se.renderer(o),ce.setUserInfo({name:i.name,about:i.about,avatar:i.avatar})})).catch((function(e){return console.log("Error.....: ".concat(e))}));var ee=new C(e,t),te=new C(e,n),ne=new C(e,r),re=new B(".popup_type_image"),oe=new q(".popup_type_add-card",(function(e){y("Saving..."),M.createCard({name:e["card-title"],link:e["card-link"]}).then((function(e){se.addItem(le(e)),oe.close()})).catch((function(e){console.log("Error.....: ".concat(e))})).finally((function(){y("Create")}))})),ie=new K(".popup_type_remove-card"),ae=new q(".popup_type_edit-avatar",(function(e){y("Saving..."),M.editAvatar(e["image-link"]).then((function(e){ce.setUserInfo(e),ae.close()})).catch((function(e){console.log("Error.....: ".concat(e))})).finally((function(){y("Save")}))}));c.addEventListener("click",(function(){var e=ce.getUserInfo();f.value=e.userName,p.value=e.userProfession,ue.open()})),u.addEventListener("click",(function(){oe.open()})),l.addEventListener("click",(function(){ae.open()})),ee.enableValidation(),te.enableValidation(),ne.enableValidation(),ee.resetValidation(),te.resetValidation(),ne.resetValidation(),re.setEventListeners(),oe.setEventListeners(),ae.setEventListeners(),ie.setEventListeners();var ce=new V(".edit-name",".profile-info__profession",".avatar__image"),ue=new q(".popup_type_edit-profile",(function(e){y("Saving..."),M.editUserInfo({name:e.name,about:e.profession}).then((function(e){ce.setUserInfo({name:e.name,about:e.about,avatar:e.avatar}),ue.close()})).catch((function(e){console.log("Error.....: ".concat(e))})).finally((function(){y("Save")}))}));function le(e){var t=new X(e,".card-template",(function(){re.open(e.link,e.name)}),(function(e){t.isLiked()?M.removeLikes(e).then((function(e){t.addLikes(e.likes)})).catch((function(e){return console.log("Error.....: ".concat(e))})):M.addLikes(e).then((function(e){t.addLikes(e.likes)})).catch((function(e){return console.log("Error.....: ".concat(e))}))}),(function(e){ie.open(),ie.setAction((function(){y("Deleting..."),M.deleteCard(e).then((function(e){t.removeCard(),ie.close()})).catch((function(e){console.log("Error.....: ".concat(e))})).finally((function(){y("Yes")}))}))}),W);return t.createCardElement()}ue.setEventListeners();var se=new _({renderer:function(e){se.addItem(le(e))}},".card-list")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,