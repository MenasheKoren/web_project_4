(()=>{"use strict";var e={inputSelector:".field-input",submitButtonSelector:".popup__save"},t=document.querySelector(".popup_type_edit-profile"),n=document.querySelector(".popup_type_add-card"),r=document.querySelector(".popup_type_edit-avatar"),o=(document.querySelector(".card-template").content.querySelector(".card"),document.querySelector(".card-list"),document.querySelectorAll(".card"),document.querySelector(".popup_type_edit-profile")),i=document.querySelector(".popup_type_add-card"),a=document.querySelector(".popup_type_image"),c=(document.querySelector(".popup_opened"),o.querySelector(".popup__close"),i.querySelector(".popup__close"),a.querySelector(".popup__close"),document.querySelector(".edit-button")),u=document.querySelector(".add-button"),l=document.querySelector(".avatar"),s=o.querySelector(".field-input_type_name"),f=o.querySelector(".field-input_type_profession"),p=(i.querySelector(".field-input_type_card-title"),i.querySelector(".field-input_type_card-link"),document.querySelector(".edit-name"),document.querySelector(".profile-info__profession"),document.querySelectorAll(".field-input"),o.querySelector(".popup__form"),i.querySelector(".popup__form"),a.querySelector(".popup__figure"),a.querySelector(".popup__image"),a.querySelector(".popup__caption"),".popup_type_edit-profile"),d=".popup_type_add-card",y=".popup_type_edit-avatar",h=".popup_type_remove-card",_=function(e,t){return fetch(e,t).then((function(e){return e.ok?e.json():Promise.reject(e.statusText)}))};function m(e,t){var n=document.querySelector("".concat(t," .popup__save"));n&&(n.textContent=e)}function v(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var b=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._container=document.querySelector(n),this._renderer=r}var t,n;return t=e,(n=[{key:"renderer",value:function(e){var t=this;e.length&&e.forEach((function(e){t._renderer(e)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&v(t.prototype,n),e}();function E(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var S=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popupElement=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"open",value:function(){this._popupElement.classList.add("popup_opened"),document.addEventListener("keyup",this._handleEscClose)}},{key:"close",value:function(){this._popupElement.classList.remove("popup_opened"),document.removeEventListener("keyup",this._handleEscClose)}},{key:"setEventListeners",value:function(){var e=this;this._popupElement.addEventListener("click",(function(t){!t.target.classList.contains("popup__close")&&t.target.closest(".popup__container")||e.close()}))}}])&&E(t.prototype,n),e}();function g(e){return g="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},g(e)}function k(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function w(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function O(e,t,n){return O="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=L(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}},O(e,t,n||e)}function q(e,t){return q=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},q(e,t)}function j(e,t){if(t&&("object"===g(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function L(e){return L=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},L(e)}var C=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&q(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=L(r);if(o){var n=L(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return j(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._handleSubmit=t,n._form=n._popupElement.querySelector(".popup__form"),n}return t=a,(n=[{key:"_getInputValues",value:function(){var e,t=function(e){if(Array.isArray(e))return k(e)}(e=this._form.querySelectorAll(".field-input"))||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(e){if("string"==typeof e)return k(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?k(e,t):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),n={};return t.forEach((function(e){n[e.name]=e.value})),n}},{key:"setEventListeners",value:function(){var e=this;O(L(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._handleSubmit(e._getInputValues())}))}},{key:"close",value:function(){O(L(a.prototype),"close",this).call(this),this._form.reset()}}])&&w(t.prototype,n),a}(S);function P(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function I(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var A=function(){function e(t,n){var r,o,i=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),o=function(){var e,t=i._settings.inputSelector;i.inputs=function(e){if(Array.isArray(e))return P(e)}(e=i._formElement.querySelectorAll(t))||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(e){if("string"==typeof e)return P(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?P(e,t):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),i.inputs.forEach((function(e){e.addEventListener("input",(function(){i._checkValidity(e),i._toggleButtonState(i.inputs)}))}))},(r="_setEventListeners")in this?Object.defineProperty(this,r,{value:o,enumerable:!0,configurable:!0,writable:!0}):this[r]=o,this._settings=t,this._formElement=n}var t,n;return t=e,(n=[{key:"_showError",value:function(e){var t=e.validationMessage;this._formElement.querySelector("#".concat(e.id,"-error")).textContent=t}},{key:"_hideError",value:function(e){this._formElement.querySelector("#".concat(e.id,"-error")).textContent=""}},{key:"_checkValidity",value:function(e){e.validity.valid?this._hideError(e):this._showError(e)}},{key:"_toggleButtonState",value:function(){var e=this._settings.submitButtonSelector,t=this._formElement.querySelector(e),n=this.inputs.every((function(e){return e.validity.valid}));t.disabled=!n}},{key:"resetValidation",value:function(){var e=this;this.inputs.forEach((function(t){e._hideError(t)}))}},{key:"enableValidation",value:function(){this._formElement.addEventListener("submit",(function(e){return e.preventDefault()})),this._setEventListeners()}}])&&I(t.prototype,n),e}();function T(e){return T="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},T(e)}function R(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function U(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function x(e,t,n){return x="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=V(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}},x(e,t,n||e)}function B(e,t){return B=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},B(e,t)}function D(e,t){if(t&&("object"===T(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function V(e){return V=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},V(e)}var N=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&B(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=V(r);if(o){var n=V(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return D(this,e)});function a(){return R(this,a),i.apply(this,arguments)}return t=a,(n=[{key:"open",value:function(e,t){var n=this._popupElement.querySelector(".popup__image"),r=this._popupElement.querySelector(".popup__caption");n.src=e,n.alt=t,r.textContent=t,x(V(a.prototype),"open",this).call(this),x(V(a.prototype),"setEventListeners",this).call(this)}}])&&U(t.prototype,n),a}(S);function M(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var J=function(){function e(t,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._userNameElement=document.querySelector(t),this._userProfessionElement=document.querySelector(n),this._avatarSelectorElement=document.querySelector(r)}var t,n;return t=e,n=[{key:"getUserInfo",value:function(){return{userName:this._userNameElement.textContent,userProfession:this._userProfessionElement.textContent,userAvatar:this._avatarSelectorElement.src}}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.about,r=e.avatar;this._userNameElement.textContent=t,this._userProfessionElement.textContent=n,this._avatarSelectorElement.src=r}}],n&&M(t.prototype,n),e}();function $(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var H=new(function(){function e(t){var n=t.baseUrl,r=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=n,this._headers=r}var t,n;return t=e,(n=[{key:"getInitialCards",value:function(){return _("".concat(this._baseUrl,"/cards"),{headers:this._headers})}},{key:"getUserInfo",value:function(){return _("".concat(this._baseUrl,"/users/me"),{headers:this._headers})}},{key:"editUserInfo",value:function(e){return _("".concat(this._baseUrl,"/users/me"),{headers:this._headers,method:"PATCH",body:JSON.stringify(e)})}},{key:"editAvatar",value:function(e){return _("".concat(this._baseUrl,"/users/me/avatar"),{headers:this._headers,method:"PATCH",body:JSON.stringify({avatar:e})})}},{key:"createCard",value:function(e){return _("".concat(this._baseUrl,"/cards"),{headers:this._headers,method:"POST",body:JSON.stringify(e)})}},{key:"deleteCard",value:function(e){return _("".concat(this._baseUrl,"/cards/").concat(e),{headers:this._headers,method:"DELETE"})}},{key:"addLikes",value:function(e){return _("".concat(this._baseUrl,"/cards/likes/").concat(e),{headers:this._headers,method:"PUT"})}},{key:"removeLikes",value:function(e){return _("".concat(this._baseUrl,"/cards/likes/").concat(e),{headers:this._headers,method:"DELETE"})}}])&&$(t.prototype,n),e}())({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"a422b90c-eef7-4772-9177-7c895e07d221","Content-Type":"application/json"}});function z(e){return z="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},z(e)}function Y(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function F(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function G(e,t,n){return G="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=W(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}},G(e,t,n||e)}function K(e,t){return K=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},K(e,t)}function Q(e,t){if(t&&("object"===z(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function W(e){return W=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},W(e)}var X=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&K(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=W(r);if(o){var n=W(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return Q(this,e)});function a(){return Y(this,a),i.apply(this,arguments)}return t=a,(n=[{key:"setAction",value:function(e){this._handleSubmit=e}},{key:"setEventListeners",value:function(){var e=this;this._popupElement.addEventListener("submit",(function(t){t.preventDefault(),e._handleSubmit()})),G(W(a.prototype),"setEventListeners",this).call(this)}}])&&F(t.prototype,n),a}(S);function Z(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var ee,te=function(){function e(t,n,r,o,i,a){var c,u,l=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),u=function(){return l._cardElement=l._cardTemplate.cloneNode(!0),l._cardTitle=l._cardElement.querySelector(".card__location"),l._cardImage=l._cardElement.querySelector(".card__image"),l._cardTitle.textContent=l._name,l._cardImage.src=l._link,l._cardImage.alt=l._name,l._ownerId!==l._userId&&(l._cardElement.querySelector(".card__remove").style.display="none"),l._renderLikes(),l._setEventListeners(),l._cardElement},(c="createCardElement")in this?Object.defineProperty(this,c,{value:u,enumerable:!0,configurable:!0,writable:!0}):this[c]=u,this._name=t.name,this._link=t.link,this._likes=t.likes,this._templateCardSelector=n,this._handleCardClick=r,this._handleRemoveCard=i,this._handleLikeButton=o,this._id=t._id,this._userId=a,this._ownerId=t.owner._id,this._cardTemplate=document.querySelector(n).content.querySelector(".card")}var t,n;return t=e,(n=[{key:"isLiked",value:function(){var e=this;return this._likes.some((function(t){return t._id===e._userId}))}},{key:"_renderLikes",value:function(){this._cardElement.querySelector(".card__likes-count").textContent=this._likes.length,this.isLiked()?this._cardElement.querySelector(".card__like").classList.add("button_filled"):this._cardElement.querySelector(".card__like").classList.remove("button_filled")}},{key:"addLikes",value:function(e){this._likes=e,this._renderLikes()}},{key:"removeCard",value:function(){this._cardElement.remove(),this._cardElement=null}},{key:"_setEventListeners",value:function(){var e=this;this._cardImage=this._cardElement.querySelector(".card__image"),this._removeButton=this._cardElement.querySelector(".card__remove"),this._likeButton=this._cardElement.querySelector(".card__like"),this._likeButton.addEventListener("click",(function(){return e._handleLikeButton(e._id)})),this._removeButton.addEventListener("click",(function(){return e._handleRemoveCard(e._id)})),this._cardImage.addEventListener("click",this._handleCardClick)}}])&&Z(t.prototype,n),e}();function ne(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}Promise.all([H.getInitialCards(),H.getUserInfo()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,c=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){c=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(c)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return ne(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?ne(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];ee=i._id,de.renderer(o),se.setUserInfo({name:i.name,about:i.about,avatar:i.avatar})})).catch((function(e){return console.log("Error.....: ".concat(e))}));var re=new A(e,t),oe=new A(e,n),ie=new A(e,r),ae=new N(".popup_type_image"),ce=new C(d,(function(e){m("Saving...",d),H.createCard({name:e["card-title"],link:e["card-link"]}).then((function(e){de.addItem(pe(e)),ce.close()})).catch((function(e){console.log("Error.....: ".concat(e))})).finally((function(){m("Create",d)}))})),ue=new X(h),le=new C(y,(function(e){m("Saving...",y),H.editAvatar(e["image-link"]).then((function(e){se.setUserInfo(e),le.close()})).catch((function(e){console.log("Error.....: ".concat(e))})).finally((function(){m("Save",y)}))}));c.addEventListener("click",(function(){var e=se.getUserInfo();s.value=e.userName,f.value=e.userProfession,fe.open()})),u.addEventListener("click",(function(){ce.open()})),l.addEventListener("click",(function(){le.open()})),re.enableValidation(),oe.enableValidation(),ie.enableValidation(),re.resetValidation(),oe.resetValidation(),ie.resetValidation(),ae.setEventListeners(),ce.setEventListeners(),le.setEventListeners(),ue.setEventListeners();var se=new J(".edit-name",".profile-info__profession",".avatar__image"),fe=new C(p,(function(e){m("Saving...",p),H.editUserInfo({name:e.name,about:e.profession}).then((function(e){se.setUserInfo({name:e.name,about:e.about,avatar:e.avatar}),fe.close()})).catch((function(e){console.log("Error.....: ".concat(e))})).finally((function(){m("Save",p)}))}));function pe(e){var t=new te(e,".card-template",(function(){ae.open(e.link,e.name)}),(function(e){t.isLiked()?H.removeLikes(e).then((function(e){t.addLikes(e.likes)})).catch((function(e){return console.log("Error.....: ".concat(e))})):H.addLikes(e).then((function(e){t.addLikes(e.likes)})).catch((function(e){return console.log("Error.....: ".concat(e))}))}),(function(e){ue.open(),ue.setAction((function(){m("Deleting...",h),H.deleteCard(e).then((function(e){t.removeCard(),ue.close()})).catch((function(e){console.log("Error.....: ".concat(e))})).finally((function(){m("Yes",h)}))}))}),ee);return t.createCardElement()}fe.setEventListeners();var de=new b({renderer:function(e){de.addItem(pe(e))}},".card-list")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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N0gsV0FFZCtHLE9BQU0sU0FBQ0MsR0FDTkMsUUFBUUMsSUFBUixzQkFBMkJGLE9BRTVCUyxTQUFRLFdBQ1BqSixFQUF3QixPQUFRZixTQU10QyxTQUFTK0osR0FBYXJJLEdBQ3BCLElBQU1nSixFQUFjLElBQUkxRCxHQUN0QnRGLEVYMURnQyxrQlc0RGhDLFdBQ0VoQyxHQUFXMkssS0FBSzNJLEVBQUtzRCxLQUFNdEQsRUFBSzZCLFNBRWxDLFNBQUNjLEdBQ3dCcUcsRUFBWS9CLFVBRWpDekMsRUFBQUEsWUFDZTdCLEdBQ1o3RCxNQUFLLFNBQUNDLEdBQ0xpSyxFQUFZQyxTQUFTbEssRUFBSXlILFVBRTFCb0IsT0FBTSxTQUFDQyxHQUFELE9BQVNDLFFBQVFDLElBQVIsc0JBQTJCRixPQUU3Q3JELEVBQUFBLFNBQ1k3QixHQUNUN0QsTUFBSyxTQUFDQyxHQUNMaUssRUFBWUMsU0FBU2xLLEVBQUl5SCxVQUUxQm9CLE9BQU0sU0FBQ0MsR0FBRCxPQUFTQyxRQUFRQyxJQUFSLHNCQUEyQkYsVUFHakQsU0FBQ2xGLEdBQ0M0RixHQUFhSSxPQUViSixHQUFhVyxXQUFVLFdBQ3JCN0osRUFBd0IsY0FBZVosR0FDdkMrRixFQUFBQSxXQUNjN0IsR0FDWDdELE1BQUssU0FBQ0MsR0FDTGlLLEVBQVlHLGFBQ1paLEdBQWExSCxXQUVkK0csT0FBTSxTQUFDQyxHQUNOQyxRQUFRQyxJQUFSLHNCQUEyQkYsT0FFNUJTLFNBQVEsV0FDUGpKLEVBQXdCLE1BQU9aLFdBSXZDNEcsSUFHRixPQUFPMkQsRUFBWUksb0JBakRyQlYsR0FBYUksb0JBb0RiLElBQU1wQixHQUFXLElBQUloSSxFQUNuQixDQUNFRSxTQUFVLFNBQUNJLEdBQ1QwSCxHQUFTVSxRQUFRQyxHQUFhckksTVg1R0EsZSIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYl9wcm9qZWN0XzkvLi9zcmMvc2NyaXB0cy91dGlscy9jb25zdGFudHMuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfOS8uL3NyYy9zY3JpcHRzL3V0aWxzL3V0aWxzLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzkvLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL1NlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfOS8uL3NyYy9zY3JpcHRzL2NvbXBvbmVudHMvUG9wdXAuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfOS8uL3NyYy9zY3JpcHRzL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF85Ly4vc3JjL3NjcmlwdHMvY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzkvLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzkvLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL1VzZXJJbmZvLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzkvLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL0FwaS5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF85Ly4vc3JjL3NjcmlwdHMvY29tcG9uZW50cy9Qb3B1cFdpdGhTdWJtaXQuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfOS8uL3NyYy9zY3JpcHRzL2NvbXBvbmVudHMvQ2FyZC5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF85Ly4vc3JjL3BhZ2VzL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBzZXR0aW5ncyA9IHtcbiAgaW5wdXRTZWxlY3RvcjogXCIuZmllbGQtaW5wdXRcIixcbiAgc3VibWl0QnV0dG9uU2VsZWN0b3I6IFwiLnBvcHVwX19zYXZlXCIsXG59O1xuXG5leHBvcnQgY29uc3QgZWRpdEZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX3R5cGVfZWRpdC1wcm9maWxlXCIpO1xuZXhwb3J0IGNvbnN0IGFkZENhcmRGb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF90eXBlX2FkZC1jYXJkXCIpO1xuZXhwb3J0IGNvbnN0IGVkaXRBdmF0YXJGb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF90eXBlX2VkaXQtYXZhdGFyXCIpO1xuZXhwb3J0IGNvbnN0IGluaXRpYWxDYXJkcyA9IFtcbiAge1xuICAgIG5hbWU6IFwiWW9zZW1pdGUgVmFsbGV5XCIsXG4gICAgbGluazogXCJodHRwczovL2NvZGUuczMueWFuZGV4Lm5ldC93ZWItY29kZS95b3NlbWl0ZS5qcGdcIixcbiAgfSxcbiAge1xuICAgIG5hbWU6IFwiTGFrZSBMb3Vpc2VcIixcbiAgICBsaW5rOiBcImh0dHBzOi8vY29kZS5zMy55YW5kZXgubmV0L3dlYi1jb2RlL2xha2UtbG91aXNlLmpwZ1wiLFxuICB9LFxuICB7XG4gICAgbmFtZTogXCJCYWxkIE1vdW50YWluc1wiLFxuICAgIGxpbms6IFwiaHR0cHM6Ly9jb2RlLnMzLnlhbmRleC5uZXQvd2ViLWNvZGUvYmFsZC1tb3VudGFpbnMuanBnXCIsXG4gIH0sXG4gIHtcbiAgICBuYW1lOiBcIkxhdGVtYXJcIixcbiAgICBsaW5rOiBcImh0dHBzOi8vY29kZS5zMy55YW5kZXgubmV0L3dlYi1jb2RlL2xhdGVtYXIuanBnXCIsXG4gIH0sXG4gIHtcbiAgICBuYW1lOiBcIlZhbm9pc2UgTmF0aW9uYWwgUGFya1wiLFxuICAgIGxpbms6IFwiaHR0cHM6Ly9jb2RlLnMzLnlhbmRleC5uZXQvd2ViLWNvZGUvdmFub2lzZS5qcGdcIixcbiAgfSxcbiAge1xuICAgIG5hbWU6IFwiTGFnbyBkaSBCcmFpZXNcIixcbiAgICBsaW5rOiBcImh0dHBzOi8vY29kZS5zMy55YW5kZXgubmV0L3dlYi1jb2RlL2xhZ28uanBnXCIsXG4gIH0sXG5dO1xuXG5leHBvcnQgY29uc3QgdGVtcGxhdGVDYXJkSXRlbSA9IGRvY3VtZW50XG4gIC5xdWVyeVNlbGVjdG9yKFwiLmNhcmQtdGVtcGxhdGVcIilcbiAgLmNvbnRlbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkXCIpO1xuZXhwb3J0IGNvbnN0IGxpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmQtbGlzdFwiKTtcbmV4cG9ydCBjb25zdCBjYXJkcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuY2FyZFwiKTtcblxuLy8gbW9kYWxzXG5leHBvcnQgY29uc3QgZWRpdE1vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF90eXBlX2VkaXQtcHJvZmlsZVwiKTtcbmV4cG9ydCBjb25zdCBhZGRDYXJkTW9kYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX3R5cGVfYWRkLWNhcmRcIik7XG5leHBvcnQgY29uc3QgaW1hZ2VNb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfdHlwZV9pbWFnZVwiKTtcbmV4cG9ydCBjb25zdCBvcGVuZWRNb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfb3BlbmVkXCIpO1xuXG4vLyBjbG9zZSBidXR0b25zXG5leHBvcnQgY29uc3QgZWRpdE1vZGFsQ2xvc2VCdXR0b24gPSBlZGl0TW9kYWwucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fY2xvc2VcIik7XG5leHBvcnQgY29uc3QgYWRkQ2FyZE1vZGFsQ2xvc2VCdXR0b24gPVxuICBhZGRDYXJkTW9kYWwucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fY2xvc2VcIik7XG5leHBvcnQgY29uc3QgaW1hZ2VNb2RhbENsb3NlQnV0dG9uID0gaW1hZ2VNb2RhbC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19jbG9zZVwiKTtcblxuLy8gb3BlbiBtb2RhbCBidXR0b25zXG5leHBvcnQgY29uc3QgZWRpdFByb2ZpbGVCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmVkaXQtYnV0dG9uXCIpO1xuZXhwb3J0IGNvbnN0IGFkZENhcmRCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmFkZC1idXR0b25cIik7XG5leHBvcnQgY29uc3QgZWRpdEF2YXRhckJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuYXZhdGFyXCIpO1xuXG4vLyBpbnB1dHNcbmV4cG9ydCBjb25zdCBwcm9maWxlTmFtZUlucHV0ID0gZWRpdE1vZGFsLnF1ZXJ5U2VsZWN0b3IoXG4gIFwiLmZpZWxkLWlucHV0X3R5cGVfbmFtZVwiXG4pO1xuZXhwb3J0IGNvbnN0IHByb2ZpbGVQcm9mZXNzaW9uSW5wdXQgPSBlZGl0TW9kYWwucXVlcnlTZWxlY3RvcihcbiAgXCIuZmllbGQtaW5wdXRfdHlwZV9wcm9mZXNzaW9uXCJcbik7XG5leHBvcnQgY29uc3QgY2FyZE5hbWVJbnB1dCA9IGFkZENhcmRNb2RhbC5xdWVyeVNlbGVjdG9yKFxuICBcIi5maWVsZC1pbnB1dF90eXBlX2NhcmQtdGl0bGVcIlxuKTtcbmV4cG9ydCBjb25zdCBjYXJkTGlua0lucHV0ID0gYWRkQ2FyZE1vZGFsLnF1ZXJ5U2VsZWN0b3IoXG4gIFwiLmZpZWxkLWlucHV0X3R5cGVfY2FyZC1saW5rXCJcbik7XG5leHBvcnQgY29uc3QgcHJvZmlsZU5hbWVWYWx1ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZWRpdC1uYW1lXCIpO1xuZXhwb3J0IGNvbnN0IHByb2ZpbGVQcm9mZXNzaW9uVmFsdWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxuICBcIi5wcm9maWxlLWluZm9fX3Byb2Zlc3Npb25cIlxuKTtcbmV4cG9ydCBjb25zdCBpbml0aWFsRmllbGRJbnB1dHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLmZpZWxkLWlucHV0XCIpO1xuXG4vLyBmb3Jtc1xuZXhwb3J0IGNvbnN0IGVkaXRGb3JtTW9kYWwgPSBlZGl0TW9kYWwucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fZm9ybVwiKTtcbmV4cG9ydCBjb25zdCBhZGRDYXJkRm9ybU1vZGFsID0gYWRkQ2FyZE1vZGFsLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2Zvcm1cIik7XG5cbi8vIGltYWdlIG1vZGFsIGVsZW1lbnRzXG5leHBvcnQgY29uc3Qgb3BlbkltYWdlTW9kYWwgPSBpbWFnZU1vZGFsLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2ZpZ3VyZVwiKTtcbmV4cG9ydCBjb25zdCBpbWFnZVBvcHVwID0gaW1hZ2VNb2RhbC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19pbWFnZVwiKTtcbmV4cG9ydCBjb25zdCBjYXB0aW9uUG9wdXAgPSBpbWFnZU1vZGFsLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2NhcHRpb25cIik7XG5cbmV4cG9ydCBjb25zdCBjYXJkVGVtcGxhdGVTZWxlY3RvciA9IFwiLmNhcmQtdGVtcGxhdGVcIjtcbmV4cG9ydCBjb25zdCBsaXN0VGVtcGxhdGVTZWxlY3RvciA9IFwiLmNhcmQtbGlzdFwiO1xuXG5leHBvcnQgY29uc3QgcHJvZmlsZU5hbWVTZWxlY3RvciA9IFwiLm5hbWUtaW5wdXRcIjtcbmV4cG9ydCBjb25zdCBwcm9maWxlUHJvZmVzc2lvblNlbGVjdG9yID0gXCIucHJvZmVzc2lvbi1pbnB1dFwiO1xuZXhwb3J0IGNvbnN0IHByb2ZpbGVQb3B1cFNlbGVjdG9yID0gXCIucG9wdXBfdHlwZV9lZGl0LXByb2ZpbGVcIjtcbmV4cG9ydCBjb25zdCBhZGRDYXJkUG9wdXBTZWxlY3RvciA9IFwiLnBvcHVwX3R5cGVfYWRkLWNhcmRcIjtcbmV4cG9ydCBjb25zdCBhdmF0YXJQb3B1cFNlbGVjdG9yID0gXCIucG9wdXBfdHlwZV9lZGl0LWF2YXRhclwiO1xuZXhwb3J0IGNvbnN0IGNvbmZpcm1Qb3B1cFNlbGVjdG9yID0gXCIucG9wdXBfdHlwZV9yZW1vdmUtY2FyZFwiO1xuZXhwb3J0IGNvbnN0IGltYWdlUG9wdXBTZWxlY3RvciA9IFwiLnBvcHVwX3R5cGVfaW1hZ2VcIjtcbmV4cG9ydCBjb25zdCB1c2VyQXZhdGFyVmFsdWUgPSBcIi5pbWFnZS1saW5rXCI7XG5leHBvcnQgY29uc3QgYXZhdGFyU2VsZWN0b3IgPSBcIi5hdmF0YXJfX2ltYWdlXCI7XG5leHBvcnQgY29uc3QgdXNlck5hbWVWYWx1ZSA9IFwiLmVkaXQtbmFtZVwiO1xuZXhwb3J0IGNvbnN0IHVzZXJQcm9mZXNzaW9uVmFsdWUgPSBcIi5wcm9maWxlLWluZm9fX3Byb2Zlc3Npb25cIjtcblxuZXhwb3J0IGNvbnN0IGNhcmRUaXRsZVNlbGVjdG9yID0gXCIuY2FyZC10aXRsZVwiO1xuZXhwb3J0IGNvbnN0IGNhcmRMaW5rU2VsZWN0b3IgPSBcIi5jYXJkLWxpbmtcIjtcbiIsImltcG9ydCB7IG9wZW5lZE1vZGFsLCBzdWJtaXRCdXR0b24gfSBmcm9tIFwiLi9jb25zdGFudHNcIjtcblxuZXhwb3J0IGNvbnN0IGN1c3RvbUZldGNoID0gKHVybCwgaGVhZGVycykgPT5cbiAgZmV0Y2godXJsLCBoZWFkZXJzKS50aGVuKChyZXMpID0+XG4gICAgcmVzLm9rID8gcmVzLmpzb24oKSA6IFByb21pc2UucmVqZWN0KHJlcy5zdGF0dXNUZXh0KVxuICApO1xuXG5leHBvcnQgZnVuY3Rpb24gdXBkYXRlUHJvY2Vzc2luZ01lc3NhZ2UobWVzc2FnZSwgcG9wdXBUeXBlU2VsZWN0b3IpIHtcbmNvbnN0IHN1Ym1pdEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCR7cG9wdXBUeXBlU2VsZWN0b3J9IC5wb3B1cF9fc2F2ZWApO1xuaWYgKHN1Ym1pdEJ1dHRvbikge1xuICAgIHN1Ym1pdEJ1dHRvbi50ZXh0Q29udGVudCA9IG1lc3NhZ2U7XG4gIH1cbn1cbiIsImV4cG9ydCBjbGFzcyBTZWN0aW9uIHtcbiAgY29uc3RydWN0b3IoeyByZW5kZXJlciB9LCBjb250YWluZXJTZWxlY3Rvcikge1xuICAgIHRoaXMuX2NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoY29udGFpbmVyU2VsZWN0b3IpO1xuICAgIHRoaXMuX3JlbmRlcmVyID0gcmVuZGVyZXI7XG4gIH1cblxuICByZW5kZXJlcihkYXRhKSB7XG4gICAgaWYgKGRhdGEubGVuZ3RoKSB7XG4gICAgICBkYXRhLmZvckVhY2goKGl0ZW0pID0+IHtcbiAgICAgICAgdGhpcy5fcmVuZGVyZXIoaXRlbSk7XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBhZGRJdGVtKGVsZW1lbnQpIHtcbiAgICB0aGlzLl9jb250YWluZXIucHJlcGVuZChlbGVtZW50KTtcbiAgfVxufVxuIiwiZXhwb3J0IGNsYXNzIFBvcHVwIHtcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3Rvcikge1xuICAgIHRoaXMuX3BvcHVwRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IocG9wdXBTZWxlY3Rvcik7XG4gICAgdGhpcy5faGFuZGxlRXNjQ2xvc2UgPSB0aGlzLl9oYW5kbGVFc2NDbG9zZS5iaW5kKHRoaXMpO1xuICB9XG5cbiAgX2hhbmRsZUVzY0Nsb3NlKGV2dCkge1xuICAgIGlmIChldnQua2V5ID09PSBcIkVzY2FwZVwiKSB7XG4gICAgICB0aGlzLmNsb3NlKCk7XG4gICAgfVxuICB9XG5cbiAgb3BlbigpIHtcbiAgICB0aGlzLl9wb3B1cEVsZW1lbnQuY2xhc3NMaXN0LmFkZChcInBvcHVwX29wZW5lZFwiKTtcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwia2V5dXBcIiwgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xuICB9XG5cbiAgY2xvc2UoKSB7XG4gICAgdGhpcy5fcG9wdXBFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoXCJwb3B1cF9vcGVuZWRcIik7XG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleXVwXCIsIHRoaXMuX2hhbmRsZUVzY0Nsb3NlKTtcbiAgfVxuXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHRoaXMuX3BvcHVwRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGV2dCkgPT4ge1xuICAgICAgaWYgKFxuICAgICAgICBldnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcInBvcHVwX19jbG9zZVwiKSB8fFxuICAgICAgICAhZXZ0LnRhcmdldC5jbG9zZXN0KFwiLnBvcHVwX19jb250YWluZXJcIilcbiAgICAgICkge1xuICAgICAgICB0aGlzLmNsb3NlKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbn1cbiIsImltcG9ydCB7IFBvcHVwIH0gZnJvbSBcIi4vUG9wdXAuanNcIjtcblxuZXhwb3J0IGNsYXNzIFBvcHVwV2l0aEZvcm0gZXh0ZW5kcyBQb3B1cCB7XG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IsIGhhbmRsZVN1Ym1pdCkge1xuICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xuICAgIHRoaXMuX2hhbmRsZVN1Ym1pdCA9IGhhbmRsZVN1Ym1pdDtcbiAgICB0aGlzLl9mb3JtID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2Zvcm1cIik7XG4gIH1cblxuICBfZ2V0SW5wdXRWYWx1ZXMoKSB7XG4gICAgY29uc3QgaW5wdXRzID0gWy4uLnRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvckFsbChcIi5maWVsZC1pbnB1dFwiKV07XG4gICAgY29uc3QgaW5wdXRWYWx1ZXMgPSB7fTtcblxuICAgIGlucHV0cy5mb3JFYWNoKChpbnB1dCkgPT4ge1xuICAgICAgaW5wdXRWYWx1ZXNbaW5wdXQubmFtZV0gPSBpbnB1dC52YWx1ZTtcbiAgICB9KTtcblxuICAgIHJldHVybiBpbnB1dFZhbHVlcztcbiAgfVxuXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XG4gICAgdGhpcy5fZm9ybS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChlKSA9PiB7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICB0aGlzLl9oYW5kbGVTdWJtaXQodGhpcy5fZ2V0SW5wdXRWYWx1ZXMoKSk7XG4gICAgfSk7XG4gIH1cblxuICBjbG9zZSgpIHtcbiAgICBzdXBlci5jbG9zZSgpO1xuICAgIHRoaXMuX2Zvcm0ucmVzZXQoKTtcbiAgfVxufVxuIiwiZXhwb3J0IGNsYXNzIEZvcm1WYWxpZGF0b3Ige1xuICBjb25zdHJ1Y3RvcihzZXR0aW5ncywgZm9ybUVsZW1lbnQpIHtcbiAgICB0aGlzLl9zZXR0aW5ncyA9IHNldHRpbmdzO1xuICAgIHRoaXMuX2Zvcm1FbGVtZW50ID0gZm9ybUVsZW1lbnQ7XG4gIH1cblxuICBfc2hvd0Vycm9yKGlucHV0KSB7XG4gICAgY29uc3QgZXJyb3IgPSBpbnB1dC52YWxpZGF0aW9uTWVzc2FnZTtcbiAgICBjb25zdCBlcnJvckVsZW1lbnQgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKGAjJHtpbnB1dC5pZH0tZXJyb3JgKTtcbiAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBlcnJvcjtcbiAgfVxuXG4gIF9oaWRlRXJyb3IoaW5wdXQpIHtcbiAgICBjb25zdCBlcnJvckVsZW1lbnQgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKGAjJHtpbnB1dC5pZH0tZXJyb3JgKTtcbiAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBcIlwiO1xuICB9XG5cbiAgX2NoZWNrVmFsaWRpdHkoaW5wdXQpIHtcbiAgICBpZiAoaW5wdXQudmFsaWRpdHkudmFsaWQpIHtcbiAgICAgIHRoaXMuX2hpZGVFcnJvcihpbnB1dCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX3Nob3dFcnJvcihpbnB1dCk7XG4gICAgfVxuICB9XG5cbiAgX3NldEV2ZW50TGlzdGVuZXJzID0gKCkgPT4ge1xuICAgIGNvbnN0IHsgaW5wdXRTZWxlY3RvciB9ID0gdGhpcy5fc2V0dGluZ3M7XG4gICAgdGhpcy5pbnB1dHMgPSBbLi4udGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvckFsbChpbnB1dFNlbGVjdG9yKV07XG5cbiAgICB0aGlzLmlucHV0cy5mb3JFYWNoKChpbnB1dCkgPT4ge1xuICAgICAgaW5wdXQuYWRkRXZlbnRMaXN0ZW5lcihcImlucHV0XCIsICgpID0+IHtcbiAgICAgICAgdGhpcy5fY2hlY2tWYWxpZGl0eShpbnB1dCk7XG4gICAgICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKHRoaXMuaW5wdXRzKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9O1xuXG4gIF90b2dnbGVCdXR0b25TdGF0ZSgpIHtcbiAgICBjb25zdCB7IHN1Ym1pdEJ1dHRvblNlbGVjdG9yIH0gPSB0aGlzLl9zZXR0aW5ncztcbiAgICBjb25zdCBidXR0b24gPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKHN1Ym1pdEJ1dHRvblNlbGVjdG9yKTtcbiAgICBjb25zdCBpc0Zvcm1WYWxpZCA9IHRoaXMuaW5wdXRzLmV2ZXJ5KChpbnB1dCkgPT4gaW5wdXQudmFsaWRpdHkudmFsaWQpO1xuICAgIGJ1dHRvbi5kaXNhYmxlZCA9ICFpc0Zvcm1WYWxpZDtcbiAgfVxuXG4gIHJlc2V0VmFsaWRhdGlvbigpIHtcbiAgICB0aGlzLmlucHV0cy5mb3JFYWNoKChpbnB1dCkgPT4ge1xuICAgICAgdGhpcy5faGlkZUVycm9yKGlucHV0KTtcbiAgICB9KTtcbiAgfVxuXG4gIGVuYWJsZVZhbGlkYXRpb24oKSB7XG4gICAgdGhpcy5fZm9ybUVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZXZ0KSA9PiBldnQucHJldmVudERlZmF1bHQoKSk7XG5cbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xuICB9XG59XG4iLCJpbXBvcnQgeyBQb3B1cCB9IGZyb20gXCIuL1BvcHVwLmpzXCI7XG5cbmV4cG9ydCBjbGFzcyBQb3B1cFdpdGhJbWFnZSBleHRlbmRzIFBvcHVwIHtcbiAgb3BlbihsaW5rLCBuYW1lKSB7XG4gICAgY29uc3QgaW1hZ2VFbGVtZW50ID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2ltYWdlXCIpO1xuICAgIGNvbnN0IGNhcHRpb25FbGVtZW50ID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2NhcHRpb25cIik7XG5cbiAgICBpbWFnZUVsZW1lbnQuc3JjID0gbGluaztcbiAgICBpbWFnZUVsZW1lbnQuYWx0ID0gbmFtZTtcbiAgICBjYXB0aW9uRWxlbWVudC50ZXh0Q29udGVudCA9IG5hbWU7XG5cbiAgICBzdXBlci5vcGVuKCk7XG4gICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgfVxufVxuIiwiZXhwb3J0IGNsYXNzIFVzZXJJbmZvIHtcbiAgY29uc3RydWN0b3IodXNlck5hbWVTZWxlY3RvciwgdXNlclByb2Zlc3Npb25TZWxlY3RvciwgYXZhdGFyU2VsZWN0b3IpIHtcbiAgICB0aGlzLl91c2VyTmFtZUVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHVzZXJOYW1lU2VsZWN0b3IpO1xuICAgIHRoaXMuX3VzZXJQcm9mZXNzaW9uRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXG4gICAgICB1c2VyUHJvZmVzc2lvblNlbGVjdG9yXG4gICAgKTtcbiAgICB0aGlzLl9hdmF0YXJTZWxlY3RvckVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGF2YXRhclNlbGVjdG9yKTtcbiAgfVxuXG4gIGdldFVzZXJJbmZvKCkge1xuICAgIHJldHVybiB7XG4gICAgICB1c2VyTmFtZTogdGhpcy5fdXNlck5hbWVFbGVtZW50LnRleHRDb250ZW50LFxuICAgICAgdXNlclByb2Zlc3Npb246IHRoaXMuX3VzZXJQcm9mZXNzaW9uRWxlbWVudC50ZXh0Q29udGVudCxcbiAgICAgIHVzZXJBdmF0YXI6IHRoaXMuX2F2YXRhclNlbGVjdG9yRWxlbWVudC5zcmMsXG4gICAgfTtcbiAgfVxuXG4gIHNldFVzZXJJbmZvKHVzZXJJbmZvKSB7XG4gICAgY29uc3QgeyBuYW1lLCBhYm91dCwgYXZhdGFyIH0gPSB1c2VySW5mbztcbiAgICB0aGlzLl91c2VyTmFtZUVsZW1lbnQudGV4dENvbnRlbnQgPSBuYW1lO1xuICAgIHRoaXMuX3VzZXJQcm9mZXNzaW9uRWxlbWVudC50ZXh0Q29udGVudCA9IGFib3V0O1xuICAgIHRoaXMuX2F2YXRhclNlbGVjdG9yRWxlbWVudC5zcmMgPSBhdmF0YXI7XG4gIH1cbn1cbiIsImltcG9ydCB7IGN1c3RvbUZldGNoIH0gZnJvbSBcIi4uL3V0aWxzL3V0aWxzXCI7XG5cbmNsYXNzIEFwaSB7XG4gIGNvbnN0cnVjdG9yKHsgYmFzZVVybCwgaGVhZGVycyB9KSB7XG4gICAgdGhpcy5fYmFzZVVybCA9IGJhc2VVcmw7XG4gICAgdGhpcy5faGVhZGVycyA9IGhlYWRlcnM7XG4gIH1cblxuICBnZXRJbml0aWFsQ2FyZHMoKSB7XG4gICAgcmV0dXJuIGN1c3RvbUZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzYCwge1xuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICB9KTtcbiAgfVxuXG4gIGdldFVzZXJJbmZvKCkge1xuICAgIHJldHVybiBjdXN0b21GZXRjaChgJHt0aGlzLl9iYXNlVXJsfS91c2Vycy9tZWAsIHtcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgfSk7XG4gIH1cblxuICBlZGl0VXNlckluZm8oZGF0YSkge1xuICAgIHJldHVybiBjdXN0b21GZXRjaChgJHt0aGlzLl9iYXNlVXJsfS91c2Vycy9tZWAsIHtcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgICBtZXRob2Q6IFwiUEFUQ0hcIixcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGRhdGEpLFxuICAgIH0pO1xuICB9XG5cbiAgZWRpdEF2YXRhcihkYXRhKSB7XG4gICAgcmV0dXJuIGN1c3RvbUZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lL2F2YXRhcmAsIHtcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgICBtZXRob2Q6IFwiUEFUQ0hcIixcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgYXZhdGFyOiBkYXRhLFxuICAgICAgfSksXG4gICAgfSk7XG4gIH1cblxuICBjcmVhdGVDYXJkKGRhdGEpIHtcbiAgICByZXR1cm4gY3VzdG9tRmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHNgLCB7XG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGRhdGEpLFxuICAgIH0pO1xuICB9XG5cbiAgZGVsZXRlQ2FyZChjYXJkSWQpIHtcbiAgICByZXR1cm4gY3VzdG9tRmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHMvJHtjYXJkSWR9YCwge1xuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICAgIG1ldGhvZDogXCJERUxFVEVcIixcbiAgICB9KTtcbiAgfVxuXG4gIGFkZExpa2VzKGNhcmRJZCkge1xuICAgIHJldHVybiBjdXN0b21GZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkcy9saWtlcy8ke2NhcmRJZH1gLCB7XG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgICAgbWV0aG9kOiBcIlBVVFwiLFxuICAgIH0pO1xuICB9XG5cbiAgcmVtb3ZlTGlrZXMoY2FyZElkKSB7XG4gICAgcmV0dXJuIGN1c3RvbUZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzL2xpa2VzLyR7Y2FyZElkfWAsIHtcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXG4gICAgfSk7XG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IGFwaSA9IG5ldyBBcGkoe1xuICBiYXNlVXJsOiBcImh0dHBzOi8vYXJvdW5kLm5vbW9yZXBhcnRpZXMuY28vdjEvZ3JvdXAtMTJcIixcbiAgaGVhZGVyczoge1xuICAgIGF1dGhvcml6YXRpb246IFwiYTQyMmI5MGMtZWVmNy00NzcyLTkxNzctN2M4OTVlMDdkMjIxXCIsXG4gICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gIH0sXG59KTtcbiIsImltcG9ydCB7IFBvcHVwIH0gZnJvbSBcIi4vUG9wdXAuanNcIjtcbmV4cG9ydCBjbGFzcyBQb3B1cFdpdGhTdWJtaXQgZXh0ZW5kcyBQb3B1cCB7XG4gIHNldEFjdGlvbihhY3Rpb24pIHtcbiAgICB0aGlzLl9oYW5kbGVTdWJtaXQgPSBhY3Rpb247XG4gIH1cblxuICBzZXRFdmVudExpc3RlbmVycygpIHtcbiAgICB0aGlzLl9wb3B1cEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZSkgPT4ge1xuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgdGhpcy5faGFuZGxlU3VibWl0KCk7XG4gICAgfSk7XG4gICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgfVxufVxuIiwiZXhwb3J0IGNsYXNzIENhcmQge1xuICBjb25zdHJ1Y3RvcihcbiAgICBkYXRhLFxuICAgIHRlbXBsYXRlQ2FyZFNlbGVjdG9yLFxuICAgIGhhbmRsZUNhcmRDbGljayxcbiAgICBoYW5kbGVMaWtlQnV0dG9uLFxuICAgIGhhbmRsZVJlbW92ZUNhcmQsXG4gICAgdXNlcklkXG4gICkge1xuICAgIHRoaXMuX25hbWUgPSBkYXRhLm5hbWU7XG4gICAgdGhpcy5fbGluayA9IGRhdGEubGluaztcbiAgICB0aGlzLl9saWtlcyA9IGRhdGEubGlrZXM7XG5cbiAgICB0aGlzLl90ZW1wbGF0ZUNhcmRTZWxlY3RvciA9IHRlbXBsYXRlQ2FyZFNlbGVjdG9yO1xuICAgIHRoaXMuX2hhbmRsZUNhcmRDbGljayA9IGhhbmRsZUNhcmRDbGljaztcbiAgICB0aGlzLl9oYW5kbGVSZW1vdmVDYXJkID0gaGFuZGxlUmVtb3ZlQ2FyZDtcbiAgICB0aGlzLl9oYW5kbGVMaWtlQnV0dG9uID0gaGFuZGxlTGlrZUJ1dHRvbjtcbiAgICB0aGlzLl9pZCA9IGRhdGEuX2lkO1xuXG4gICAgdGhpcy5fdXNlcklkID0gdXNlcklkO1xuICAgIHRoaXMuX293bmVySWQgPSBkYXRhLm93bmVyLl9pZDtcblxuICAgIHRoaXMuX2NhcmRUZW1wbGF0ZSA9IGRvY3VtZW50XG4gICAgICAucXVlcnlTZWxlY3Rvcih0ZW1wbGF0ZUNhcmRTZWxlY3RvcilcbiAgICAgIC5jb250ZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZFwiKTtcbiAgfVxuXG4gIGlzTGlrZWQoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2xpa2VzLnNvbWUoKHBlcnNvbikgPT4gcGVyc29uLl9pZCA9PT0gdGhpcy5fdXNlcklkKTtcbiAgfVxuXG4gIF9yZW5kZXJMaWtlcygpIHtcbiAgICB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2xpa2VzLWNvdW50XCIpLnRleHRDb250ZW50ID1cbiAgICAgIHRoaXMuX2xpa2VzLmxlbmd0aDtcbiAgICBpZiAodGhpcy5pc0xpa2VkKCkpIHtcbiAgICAgIHRoaXMuX2NhcmRFbGVtZW50XG4gICAgICAgIC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2xpa2VcIilcbiAgICAgICAgLmNsYXNzTGlzdC5hZGQoXCJidXR0b25fZmlsbGVkXCIpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9jYXJkRWxlbWVudFxuICAgICAgICAucXVlcnlTZWxlY3RvcihcIi5jYXJkX19saWtlXCIpXG4gICAgICAgIC5jbGFzc0xpc3QucmVtb3ZlKFwiYnV0dG9uX2ZpbGxlZFwiKTtcbiAgICB9XG4gIH1cblxuICBhZGRMaWtlcyhuZXdMaWtlcykge1xuICAgIHRoaXMuX2xpa2VzID0gbmV3TGlrZXM7XG4gICAgdGhpcy5fcmVuZGVyTGlrZXMoKTtcbiAgfVxuXG4gIHJlbW92ZUNhcmQoKSB7XG4gICAgdGhpcy5fY2FyZEVsZW1lbnQucmVtb3ZlKCk7XG4gICAgdGhpcy5fY2FyZEVsZW1lbnQgPSBudWxsO1xuICB9XG5cbiAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHRoaXMuX2NhcmRJbWFnZSA9IHRoaXMuX2NhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9faW1hZ2VcIik7XG4gICAgdGhpcy5fcmVtb3ZlQnV0dG9uID0gdGhpcy5fY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19yZW1vdmVcIik7XG4gICAgdGhpcy5fbGlrZUJ1dHRvbiA9IHRoaXMuX2NhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fbGlrZVwiKTtcblxuICAgIHRoaXMuX2xpa2VCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+XG4gICAgICB0aGlzLl9oYW5kbGVMaWtlQnV0dG9uKHRoaXMuX2lkKVxuICAgICk7XG4gICAgdGhpcy5fcmVtb3ZlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PlxuICAgICAgdGhpcy5faGFuZGxlUmVtb3ZlQ2FyZCh0aGlzLl9pZClcbiAgICApO1xuICAgIHRoaXMuX2NhcmRJbWFnZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgdGhpcy5faGFuZGxlQ2FyZENsaWNrKTtcbiAgfVxuXG4gIGNyZWF0ZUNhcmRFbGVtZW50ID0gKCkgPT4ge1xuICAgIHRoaXMuX2NhcmRFbGVtZW50ID0gdGhpcy5fY2FyZFRlbXBsYXRlLmNsb25lTm9kZSh0cnVlKTtcbiAgICB0aGlzLl9jYXJkVGl0bGUgPSB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2xvY2F0aW9uXCIpO1xuXG4gICAgdGhpcy5fY2FyZEltYWdlID0gdGhpcy5fY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19pbWFnZVwiKTtcblxuICAgIHRoaXMuX2NhcmRUaXRsZS50ZXh0Q29udGVudCA9IHRoaXMuX25hbWU7XG4gICAgdGhpcy5fY2FyZEltYWdlLnNyYyA9IHRoaXMuX2xpbms7XG4gICAgdGhpcy5fY2FyZEltYWdlLmFsdCA9IHRoaXMuX25hbWU7XG5cbiAgICBpZiAodGhpcy5fb3duZXJJZCAhPT0gdGhpcy5fdXNlcklkKSB7XG4gICAgICB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX3JlbW92ZVwiKS5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgfVxuXG4gICAgdGhpcy5fcmVuZGVyTGlrZXMoKTtcblxuICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XG5cbiAgICByZXR1cm4gdGhpcy5fY2FyZEVsZW1lbnQ7XG4gIH07XG59XG4iLCJpbXBvcnQgXCIuLi9wYWdlcy9pbmRleC5jc3NcIjtcbmltcG9ydCB7XG4gIGxpc3RUZW1wbGF0ZVNlbGVjdG9yLFxuICBwcm9maWxlU2VsZWN0b3IsXG4gIHNldHRpbmdzLFxuICBlZGl0Rm9ybSxcbiAgYWRkQ2FyZEZvcm0sXG4gIGVkaXRBdmF0YXJGb3JtLFxuICBlZGl0UHJvZmlsZUJ1dHRvbixcbiAgYWRkQ2FyZEJ1dHRvbixcbiAgdXNlclByb2Zlc3Npb25WYWx1ZSxcbiAgdXNlck5hbWVWYWx1ZSxcbiAgcHJvZmlsZU5hbWVJbnB1dCxcbiAgcHJvZmlsZVByb2Zlc3Npb25JbnB1dCxcbiAgZWRpdEF2YXRhckJ1dHRvbixcbiAgYXZhdGFyU2VsZWN0b3IsXG4gIGNhcmRUZW1wbGF0ZVNlbGVjdG9yLFxuICBpbWFnZVBvcHVwU2VsZWN0b3IsXG4gIGFkZENhcmRQb3B1cFNlbGVjdG9yLFxuICBjb25maXJtUG9wdXBTZWxlY3RvcixcbiAgYXZhdGFyUG9wdXBTZWxlY3RvcixcbiAgcHJvZmlsZVBvcHVwU2VsZWN0b3IsXG59IGZyb20gXCIuLi9zY3JpcHRzL3V0aWxzL2NvbnN0YW50c1wiO1xuaW1wb3J0IHsgdXBkYXRlUHJvY2Vzc2luZ01lc3NhZ2UgfSBmcm9tIFwiLi4vc2NyaXB0cy91dGlscy91dGlsc1wiO1xuaW1wb3J0IHsgU2VjdGlvbiB9IGZyb20gXCIuLi9zY3JpcHRzL2NvbXBvbmVudHMvU2VjdGlvblwiO1xuaW1wb3J0IHsgUG9wdXBXaXRoRm9ybSB9IGZyb20gXCIuLi9zY3JpcHRzL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybVwiO1xuaW1wb3J0IHsgRm9ybVZhbGlkYXRvciB9IGZyb20gXCIuLi9zY3JpcHRzL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvclwiO1xuaW1wb3J0IHsgUG9wdXBXaXRoSW1hZ2UgfSBmcm9tIFwiLi4vc2NyaXB0cy9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlXCI7XG5pbXBvcnQgeyBVc2VySW5mbyB9IGZyb20gXCIuLi9zY3JpcHRzL2NvbXBvbmVudHMvVXNlckluZm9cIjtcbmltcG9ydCB7IGFwaSB9IGZyb20gXCIuLi9zY3JpcHRzL2NvbXBvbmVudHMvQXBpXCI7XG5pbXBvcnQgeyBQb3B1cFdpdGhTdWJtaXQgfSBmcm9tIFwiLi4vc2NyaXB0cy9jb21wb25lbnRzL1BvcHVwV2l0aFN1Ym1pdFwiO1xuaW1wb3J0IHsgQ2FyZCB9IGZyb20gXCIuLi9zY3JpcHRzL2NvbXBvbmVudHMvQ2FyZFwiO1xuXG5leHBvcnQgbGV0IHVzZXJJZDtcblxuUHJvbWlzZS5hbGwoW2FwaS5nZXRJbml0aWFsQ2FyZHMoKSwgYXBpLmdldFVzZXJJbmZvKCldKVxuICAudGhlbigoW2NhcmREYXRhLCB1c2VyRGF0YV0pID0+IHtcbiAgICB1c2VySWQgPSB1c2VyRGF0YS5faWQ7XG4gICAgY2FyZExpc3QucmVuZGVyZXIoY2FyZERhdGEpO1xuICAgIHVzZXJJbmZvLnNldFVzZXJJbmZvKHtcbiAgICAgIG5hbWU6IHVzZXJEYXRhLm5hbWUsXG4gICAgICBhYm91dDogdXNlckRhdGEuYWJvdXQsXG4gICAgICBhdmF0YXI6IHVzZXJEYXRhLmF2YXRhcixcbiAgICB9KTtcbiAgfSlcbiAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUubG9nKGBFcnJvci4uLi4uOiAke2Vycn1gKSk7XG5cbmNvbnN0IGVkaXRGb3JtVmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3Ioc2V0dGluZ3MsIGVkaXRGb3JtKTtcbmNvbnN0IGFkZENhcmRGb3JtVmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3Ioc2V0dGluZ3MsIGFkZENhcmRGb3JtKTtcbmNvbnN0IGVkaXRBdmF0YXJGb3JtVmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3Ioc2V0dGluZ3MsIGVkaXRBdmF0YXJGb3JtKTtcblxuY29uc3QgaW1hZ2VNb2RhbCA9IG5ldyBQb3B1cFdpdGhJbWFnZShpbWFnZVBvcHVwU2VsZWN0b3IpO1xuY29uc3QgYWRkQ2FyZE1vZGFsTmV3ID0gbmV3IFBvcHVwV2l0aEZvcm0oYWRkQ2FyZFBvcHVwU2VsZWN0b3IsIChkYXRhKSA9PiB7XG4gIHVwZGF0ZVByb2Nlc3NpbmdNZXNzYWdlKFwiU2F2aW5nLi4uXCIsIGFkZENhcmRQb3B1cFNlbGVjdG9yKTtcbiAgYXBpXG4gICAgLmNyZWF0ZUNhcmQoeyBuYW1lOiBkYXRhW1wiY2FyZC10aXRsZVwiXSwgbGluazogZGF0YVtcImNhcmQtbGlua1wiXSB9KVxuICAgIC50aGVuKChkYXRhKSA9PiB7XG4gICAgICBjYXJkTGlzdC5hZGRJdGVtKGdlbmVyYXRlQ2FyZChkYXRhKSk7XG4gICAgICBhZGRDYXJkTW9kYWxOZXcuY2xvc2UoKTtcbiAgICB9KVxuICAgIC5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZyhgRXJyb3IuLi4uLjogJHtlcnJ9YCk7XG4gICAgfSlcbiAgICAuZmluYWxseSgoKSA9PiB7XG4gICAgICB1cGRhdGVQcm9jZXNzaW5nTWVzc2FnZShcIkNyZWF0ZVwiLCBhZGRDYXJkUG9wdXBTZWxlY3Rvcik7XG4gICAgfSk7XG59KTtcblxuY29uc3QgY29uZmlybVBvcHVwID0gbmV3IFBvcHVwV2l0aFN1Ym1pdChjb25maXJtUG9wdXBTZWxlY3Rvcik7XG5cbmNvbnN0IHVwZGF0ZUF2YXRhciA9IG5ldyBQb3B1cFdpdGhGb3JtKGF2YXRhclBvcHVwU2VsZWN0b3IsICh1c2VyRGF0YSkgPT4ge1xuICB1cGRhdGVQcm9jZXNzaW5nTWVzc2FnZShcIlNhdmluZy4uLlwiLCBhdmF0YXJQb3B1cFNlbGVjdG9yKTtcbiAgYXBpXG4gICAgLmVkaXRBdmF0YXIodXNlckRhdGFbXCJpbWFnZS1saW5rXCJdKVxuICAgIC50aGVuKChyZXMpID0+IHtcbiAgICAgIHVzZXJJbmZvLnNldFVzZXJJbmZvKHJlcyk7XG4gICAgICB1cGRhdGVBdmF0YXIuY2xvc2UoKTtcbiAgICB9KVxuICAgIC5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZyhgRXJyb3IuLi4uLjogJHtlcnJ9YCk7XG4gICAgfSlcbiAgICAuZmluYWxseSgoKSA9PiB7XG4gICAgICB1cGRhdGVQcm9jZXNzaW5nTWVzc2FnZShcIlNhdmVcIiwgYXZhdGFyUG9wdXBTZWxlY3Rvcik7XG4gICAgfSk7XG59KTtcblxuZWRpdFByb2ZpbGVCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgY29uc3QgY3VycmVudFVzZXJJbmZvID0gdXNlckluZm8uZ2V0VXNlckluZm8oKTtcbiAgcHJvZmlsZU5hbWVJbnB1dC52YWx1ZSA9IGN1cnJlbnRVc2VySW5mby51c2VyTmFtZTtcbiAgcHJvZmlsZVByb2Zlc3Npb25JbnB1dC52YWx1ZSA9IGN1cnJlbnRVc2VySW5mby51c2VyUHJvZmVzc2lvbjtcbiAgcHJvZmlsZVBvcHVwLm9wZW4oKTtcbn0pO1xuXG5hZGRDYXJkQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gIGFkZENhcmRNb2RhbE5ldy5vcGVuKCk7XG59KTtcblxuZWRpdEF2YXRhckJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICB1cGRhdGVBdmF0YXIub3BlbigpO1xufSk7XG5cbmVkaXRGb3JtVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcbmFkZENhcmRGb3JtVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcbmVkaXRBdmF0YXJGb3JtVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcblxuZWRpdEZvcm1WYWxpZGF0b3IucmVzZXRWYWxpZGF0aW9uKCk7XG5hZGRDYXJkRm9ybVZhbGlkYXRvci5yZXNldFZhbGlkYXRpb24oKTtcbmVkaXRBdmF0YXJGb3JtVmFsaWRhdG9yLnJlc2V0VmFsaWRhdGlvbigpO1xuXG5pbWFnZU1vZGFsLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5hZGRDYXJkTW9kYWxOZXcuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbnVwZGF0ZUF2YXRhci5zZXRFdmVudExpc3RlbmVycygpO1xuY29uZmlybVBvcHVwLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5cbmNvbnN0IHVzZXJJbmZvID0gbmV3IFVzZXJJbmZvKFxuICB1c2VyTmFtZVZhbHVlLFxuICB1c2VyUHJvZmVzc2lvblZhbHVlLFxuICBhdmF0YXJTZWxlY3RvclxuKTtcblxuY29uc3QgcHJvZmlsZVBvcHVwID0gbmV3IFBvcHVwV2l0aEZvcm0ocHJvZmlsZVBvcHVwU2VsZWN0b3IsIChkYXRhKSA9PiB7XG4gIHVwZGF0ZVByb2Nlc3NpbmdNZXNzYWdlKFwiU2F2aW5nLi4uXCIsIHByb2ZpbGVQb3B1cFNlbGVjdG9yKTtcbiAgYXBpXG4gICAgLmVkaXRVc2VySW5mbyh7IG5hbWU6IGRhdGEubmFtZSwgYWJvdXQ6IGRhdGEucHJvZmVzc2lvbiB9KVxuICAgIC50aGVuKChyZXMpID0+IHtcbiAgICAgIHVzZXJJbmZvLnNldFVzZXJJbmZvKHtcbiAgICAgICAgbmFtZTogcmVzLm5hbWUsXG4gICAgICAgIGFib3V0OiByZXMuYWJvdXQsXG4gICAgICAgIGF2YXRhcjogcmVzLmF2YXRhcixcbiAgICAgIH0pO1xuICAgICAgcHJvZmlsZVBvcHVwLmNsb3NlKCk7XG4gICAgfSlcbiAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgY29uc29sZS5sb2coYEVycm9yLi4uLi46ICR7ZXJyfWApO1xuICAgIH0pXG4gICAgLmZpbmFsbHkoKCkgPT4ge1xuICAgICAgdXBkYXRlUHJvY2Vzc2luZ01lc3NhZ2UoXCJTYXZlXCIsIHByb2ZpbGVQb3B1cFNlbGVjdG9yKTtcbiAgICB9KTtcbn0pO1xuXG5wcm9maWxlUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuZnVuY3Rpb24gZ2VuZXJhdGVDYXJkKGRhdGEpIHtcbiAgY29uc3QgY2FyZEVsZW1lbnQgPSBuZXcgQ2FyZChcbiAgICBkYXRhLFxuICAgIGNhcmRUZW1wbGF0ZVNlbGVjdG9yLFxuICAgICgpID0+IHtcbiAgICAgIGltYWdlTW9kYWwub3BlbihkYXRhLmxpbmssIGRhdGEubmFtZSk7XG4gICAgfSxcbiAgICAoaWQpID0+IHtcbiAgICAgIGNvbnN0IGlzQWxyZWFkeUxpa2VkID0gY2FyZEVsZW1lbnQuaXNMaWtlZCgpO1xuICAgICAgaWYgKGlzQWxyZWFkeUxpa2VkKSB7XG4gICAgICAgIGFwaVxuICAgICAgICAgIC5yZW1vdmVMaWtlcyhpZClcbiAgICAgICAgICAudGhlbigocmVzKSA9PiB7XG4gICAgICAgICAgICBjYXJkRWxlbWVudC5hZGRMaWtlcyhyZXMubGlrZXMpO1xuICAgICAgICAgIH0pXG4gICAgICAgICAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUubG9nKGBFcnJvci4uLi4uOiAke2Vycn1gKSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBhcGlcbiAgICAgICAgICAuYWRkTGlrZXMoaWQpXG4gICAgICAgICAgLnRoZW4oKHJlcykgPT4ge1xuICAgICAgICAgICAgY2FyZEVsZW1lbnQuYWRkTGlrZXMocmVzLmxpa2VzKTtcbiAgICAgICAgICB9KVxuICAgICAgICAgIC5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLmxvZyhgRXJyb3IuLi4uLjogJHtlcnJ9YCkpO1xuICAgICAgfVxuICAgIH0sXG4gICAgKGlkKSA9PiB7XG4gICAgICBjb25maXJtUG9wdXAub3BlbigpO1xuXG4gICAgICBjb25maXJtUG9wdXAuc2V0QWN0aW9uKCgpID0+IHtcbiAgICAgICAgdXBkYXRlUHJvY2Vzc2luZ01lc3NhZ2UoXCJEZWxldGluZy4uLlwiLCBjb25maXJtUG9wdXBTZWxlY3Rvcik7XG4gICAgICAgIGFwaVxuICAgICAgICAgIC5kZWxldGVDYXJkKGlkKVxuICAgICAgICAgIC50aGVuKChyZXMpID0+IHtcbiAgICAgICAgICAgIGNhcmRFbGVtZW50LnJlbW92ZUNhcmQoKTtcbiAgICAgICAgICAgIGNvbmZpcm1Qb3B1cC5jbG9zZSgpO1xuICAgICAgICAgIH0pXG4gICAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGBFcnJvci4uLi4uOiAke2Vycn1gKTtcbiAgICAgICAgICB9KVxuICAgICAgICAgIC5maW5hbGx5KCgpID0+IHtcbiAgICAgICAgICAgIHVwZGF0ZVByb2Nlc3NpbmdNZXNzYWdlKFwiWWVzXCIsIGNvbmZpcm1Qb3B1cFNlbGVjdG9yKTtcbiAgICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgdXNlcklkXG4gICk7XG5cbiAgcmV0dXJuIGNhcmRFbGVtZW50LmNyZWF0ZUNhcmRFbGVtZW50KCk7XG59XG5cbmNvbnN0IGNhcmRMaXN0ID0gbmV3IFNlY3Rpb24oXG4gIHtcbiAgICByZW5kZXJlcjogKGRhdGEpID0+IHtcbiAgICAgIGNhcmRMaXN0LmFkZEl0ZW0oZ2VuZXJhdGVDYXJkKGRhdGEpKTtcbiAgICB9LFxuICB9LFxuICBsaXN0VGVtcGxhdGVTZWxlY3RvclxuKTtcbiJdLCJuYW1lcyI6WyJzZXR0aW5ncyIsImlucHV0U2VsZWN0b3IiLCJzdWJtaXRCdXR0b25TZWxlY3RvciIsImVkaXRGb3JtIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiYWRkQ2FyZEZvcm0iLCJlZGl0QXZhdGFyRm9ybSIsImVkaXRNb2RhbCIsImNvbnRlbnQiLCJxdWVyeVNlbGVjdG9yQWxsIiwiYWRkQ2FyZE1vZGFsIiwiaW1hZ2VNb2RhbCIsImVkaXRQcm9maWxlQnV0dG9uIiwiYWRkQ2FyZEJ1dHRvbiIsImVkaXRBdmF0YXJCdXR0b24iLCJwcm9maWxlTmFtZUlucHV0IiwicHJvZmlsZVByb2Zlc3Npb25JbnB1dCIsInByb2ZpbGVQb3B1cFNlbGVjdG9yIiwiYWRkQ2FyZFBvcHVwU2VsZWN0b3IiLCJhdmF0YXJQb3B1cFNlbGVjdG9yIiwiY29uZmlybVBvcHVwU2VsZWN0b3IiLCJjdXN0b21GZXRjaCIsInVybCIsImhlYWRlcnMiLCJmZXRjaCIsInRoZW4iLCJyZXMiLCJvayIsImpzb24iLCJQcm9taXNlIiwicmVqZWN0Iiwic3RhdHVzVGV4dCIsInVwZGF0ZVByb2Nlc3NpbmdNZXNzYWdlIiwibWVzc2FnZSIsInBvcHVwVHlwZVNlbGVjdG9yIiwic3VibWl0QnV0dG9uIiwidGV4dENvbnRlbnQiLCJTZWN0aW9uIiwiY29udGFpbmVyU2VsZWN0b3IiLCJyZW5kZXJlciIsInRoaXMiLCJfY29udGFpbmVyIiwiX3JlbmRlcmVyIiwiZGF0YSIsImxlbmd0aCIsImZvckVhY2giLCJpdGVtIiwiZWxlbWVudCIsInByZXBlbmQiLCJQb3B1cCIsInBvcHVwU2VsZWN0b3IiLCJfcG9wdXBFbGVtZW50IiwiX2hhbmRsZUVzY0Nsb3NlIiwiYmluZCIsImV2dCIsImtleSIsImNsb3NlIiwiY2xhc3NMaXN0IiwiYWRkIiwiYWRkRXZlbnRMaXN0ZW5lciIsInJlbW92ZSIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJ0YXJnZXQiLCJjb250YWlucyIsImNsb3Nlc3QiLCJQb3B1cFdpdGhGb3JtIiwiaGFuZGxlU3VibWl0IiwiX2hhbmRsZVN1Ym1pdCIsIl9mb3JtIiwiaW5wdXRzIiwiaW5wdXRWYWx1ZXMiLCJpbnB1dCIsIm5hbWUiLCJ2YWx1ZSIsImUiLCJwcmV2ZW50RGVmYXVsdCIsIl9nZXRJbnB1dFZhbHVlcyIsInJlc2V0IiwiRm9ybVZhbGlkYXRvciIsImZvcm1FbGVtZW50IiwiX3NldHRpbmdzIiwiX2Zvcm1FbGVtZW50IiwiX2NoZWNrVmFsaWRpdHkiLCJfdG9nZ2xlQnV0dG9uU3RhdGUiLCJlcnJvciIsInZhbGlkYXRpb25NZXNzYWdlIiwiaWQiLCJ2YWxpZGl0eSIsInZhbGlkIiwiX2hpZGVFcnJvciIsIl9zaG93RXJyb3IiLCJidXR0b24iLCJpc0Zvcm1WYWxpZCIsImV2ZXJ5IiwiZGlzYWJsZWQiLCJfc2V0RXZlbnRMaXN0ZW5lcnMiLCJQb3B1cFdpdGhJbWFnZSIsImxpbmsiLCJpbWFnZUVsZW1lbnQiLCJjYXB0aW9uRWxlbWVudCIsInNyYyIsImFsdCIsIlVzZXJJbmZvIiwidXNlck5hbWVTZWxlY3RvciIsInVzZXJQcm9mZXNzaW9uU2VsZWN0b3IiLCJhdmF0YXJTZWxlY3RvciIsIl91c2VyTmFtZUVsZW1lbnQiLCJfdXNlclByb2Zlc3Npb25FbGVtZW50IiwiX2F2YXRhclNlbGVjdG9yRWxlbWVudCIsInVzZXJOYW1lIiwidXNlclByb2Zlc3Npb24iLCJ1c2VyQXZhdGFyIiwidXNlckluZm8iLCJhYm91dCIsImF2YXRhciIsImFwaSIsIkFwaSIsImJhc2VVcmwiLCJfYmFzZVVybCIsIl9oZWFkZXJzIiwibWV0aG9kIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJjYXJkSWQiLCJhdXRob3JpemF0aW9uIiwiUG9wdXBXaXRoU3VibWl0IiwiYWN0aW9uIiwidXNlcklkIiwiQ2FyZCIsInRlbXBsYXRlQ2FyZFNlbGVjdG9yIiwiaGFuZGxlQ2FyZENsaWNrIiwiaGFuZGxlTGlrZUJ1dHRvbiIsImhhbmRsZVJlbW92ZUNhcmQiLCJfY2FyZEVsZW1lbnQiLCJfY2FyZFRlbXBsYXRlIiwiY2xvbmVOb2RlIiwiX2NhcmRUaXRsZSIsIl9jYXJkSW1hZ2UiLCJfbmFtZSIsIl9saW5rIiwiX293bmVySWQiLCJfdXNlcklkIiwic3R5bGUiLCJkaXNwbGF5IiwiX3JlbmRlckxpa2VzIiwiX2xpa2VzIiwibGlrZXMiLCJfdGVtcGxhdGVDYXJkU2VsZWN0b3IiLCJfaGFuZGxlQ2FyZENsaWNrIiwiX2hhbmRsZVJlbW92ZUNhcmQiLCJfaGFuZGxlTGlrZUJ1dHRvbiIsIl9pZCIsIm93bmVyIiwic29tZSIsInBlcnNvbiIsImlzTGlrZWQiLCJuZXdMaWtlcyIsIl9yZW1vdmVCdXR0b24iLCJfbGlrZUJ1dHRvbiIsImFsbCIsImdldEluaXRpYWxDYXJkcyIsImdldFVzZXJJbmZvIiwiY2FyZERhdGEiLCJ1c2VyRGF0YSIsImNhcmRMaXN0Iiwic2V0VXNlckluZm8iLCJjYXRjaCIsImVyciIsImNvbnNvbGUiLCJsb2ciLCJlZGl0Rm9ybVZhbGlkYXRvciIsImFkZENhcmRGb3JtVmFsaWRhdG9yIiwiZWRpdEF2YXRhckZvcm1WYWxpZGF0b3IiLCJhZGRDYXJkTW9kYWxOZXciLCJhZGRJdGVtIiwiZ2VuZXJhdGVDYXJkIiwiZmluYWxseSIsImNvbmZpcm1Qb3B1cCIsInVwZGF0ZUF2YXRhciIsImN1cnJlbnRVc2VySW5mbyIsInByb2ZpbGVQb3B1cCIsIm9wZW4iLCJlbmFibGVWYWxpZGF0aW9uIiwicmVzZXRWYWxpZGF0aW9uIiwic2V0RXZlbnRMaXN0ZW5lcnMiLCJwcm9mZXNzaW9uIiwiY2FyZEVsZW1lbnQiLCJhZGRMaWtlcyIsInNldEFjdGlvbiIsInJlbW92ZUNhcmQiLCJjcmVhdGVDYXJkRWxlbWVudCJdLCJzb3VyY2VSb290IjoiIn0=