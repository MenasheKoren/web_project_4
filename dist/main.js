(()=>{"use strict";var e={inputSelector:".field-input",submitButtonSelector:".popup__save"},t=document.querySelector(".popup_type_edit-profile"),n=document.querySelector(".popup_type_add-card"),r=document.querySelector(".popup_type_edit-avatar"),o=(document.querySelector(".card-template").content.querySelector(".card"),document.querySelector(".card-list"),document.querySelectorAll(".card"),document.querySelector(".popup_type_edit-profile")),i=document.querySelector(".popup_type_add-card"),a=document.querySelector(".popup_type_image"),u=(document.querySelector(".popup_opened"),o.querySelector(".popup__close"),i.querySelector(".popup__close"),a.querySelector(".popup__close"),document.querySelector(".edit-button")),c=document.querySelector(".add-button"),l=document.querySelector(".avatar"),s=o.querySelector(".field-input_type_name"),f=o.querySelector(".field-input_type_profession"),p=(i.querySelector(".field-input_type_card-title"),i.querySelector(".field-input_type_card-link"),document.querySelector(".edit-name"),document.querySelector(".profile-info__profession"),document.querySelectorAll(".field-input"),o.querySelector(".popup__form"),i.querySelector(".popup__form"),a.querySelector(".popup__figure"),a.querySelector(".popup__image"),a.querySelector(".popup__caption"),function(e,t){return fetch(e,t).then((function(e){return e.ok?e.json():Promise.reject(e.statusText)})).catch(console.log)});function d(e){var t=document.querySelector(".popup_opened .popup__save");t&&(t.textContent=e)}function y(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var h=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._container=document.querySelector(n),this._renderer=r}var t,n;return t=e,(n=[{key:"renderer",value:function(e){var t=this;e.length&&e.forEach((function(e){t._renderer(e)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&y(t.prototype,n),e}();function _(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var m=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popupElement=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"open",value:function(){this._popupElement.classList.add("popup_opened"),document.addEventListener("keyup",this._handleEscClose)}},{key:"close",value:function(){this._popupElement.classList.remove("popup_opened"),document.removeEventListener("keyup",this._handleEscClose)}},{key:"setEventListeners",value:function(){var e=this;this._popupElement.addEventListener("click",(function(t){!t.target.classList.contains("popup__close")&&t.target.closest(".popup__container")||e.close()}))}}])&&_(t.prototype,n),e}();function v(e){return v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},v(e)}function b(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function S(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function E(e,t,n){return E="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=w(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}},E(e,t,n||e)}function g(e,t){return g=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},g(e,t)}function k(e,t){if(t&&("object"===v(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function w(e){return w=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},w(e)}var O=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&g(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=w(r);if(o){var n=w(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return k(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._handleSubmit=t,n._form=n._popupElement.querySelector(".popup__form"),n}return t=a,(n=[{key:"_getInputValues",value:function(){var e,t=function(e){if(Array.isArray(e))return b(e)}(e=this._form.querySelectorAll(".field-input"))||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(e){if("string"==typeof e)return b(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?b(e,t):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),n={};return t.forEach((function(e){n[e.name]=e.value})),n}},{key:"setEventListeners",value:function(){var e=this;E(w(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._handleSubmit(e._getInputValues())}))}},{key:"close",value:function(){E(w(a.prototype),"close",this).call(this),this._form.reset()}}])&&S(t.prototype,n),a}(m);function q(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function j(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var L=function(){function e(t,n){var r,o,i=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),o=function(){var e,t=i._settings.inputSelector;i.inputs=function(e){if(Array.isArray(e))return q(e)}(e=i._formElement.querySelectorAll(t))||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(e){if("string"==typeof e)return q(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?q(e,t):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),i.inputs.forEach((function(e){e.addEventListener("input",(function(){i._checkValidity(e),i._toggleButtonState(i.inputs)}))}))},(r="_setEventListeners")in this?Object.defineProperty(this,r,{value:o,enumerable:!0,configurable:!0,writable:!0}):this[r]=o,this._settings=t,this._formElement=n}var t,n;return t=e,(n=[{key:"_showError",value:function(e){var t=e.validationMessage;this._formElement.querySelector("#".concat(e.id,"-error")).textContent=t}},{key:"_hideError",value:function(e){this._formElement.querySelector("#".concat(e.id,"-error")).textContent=""}},{key:"_checkValidity",value:function(e){e.validity.valid?this._hideError(e):this._showError(e)}},{key:"_toggleButtonState",value:function(){var e=this._settings.submitButtonSelector,t=this._formElement.querySelector(e),n=this.inputs.every((function(e){return e.validity.valid}));t.disabled=!n}},{key:"resetValidation",value:function(){var e=this;this.inputs.forEach((function(t){e._hideError(t)}))}},{key:"enableValidation",value:function(){this._formElement.addEventListener("submit",(function(e){return e.preventDefault()})),this._setEventListeners()}}])&&j(t.prototype,n),e}();function C(e){return C="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},C(e)}function P(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function I(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function A(e,t,n){return A="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=U(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}},A(e,t,n||e)}function T(e,t){return T=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},T(e,t)}function R(e,t){if(t&&("object"===C(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function U(e){return U=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},U(e)}var x=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&T(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=U(r);if(o){var n=U(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return R(this,e)});function a(){return P(this,a),i.apply(this,arguments)}return t=a,(n=[{key:"open",value:function(e,t){var n=this._popupElement.querySelector(".popup__image"),r=this._popupElement.querySelector(".popup__caption");n.src=e,n.alt=t,r.textContent=t,A(U(a.prototype),"open",this).call(this),A(U(a.prototype),"setEventListeners",this).call(this)}}])&&I(t.prototype,n),a}(m);function B(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var D=function(){function e(t,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._userNameElement=document.querySelector(t),this._userProfessionElement=document.querySelector(n),this._avatarSelectorElement=document.querySelector(r)}var t,n;return t=e,n=[{key:"getUserInfo",value:function(){return{userName:this._userNameElement.textContent,userProfession:this._userProfessionElement.textContent,userAvatar:this._avatarSelectorElement.src}}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.about,r=e.avatar;this._userNameElement.textContent=t,this._userProfessionElement.textContent=n,this._avatarSelectorElement.src=r}}],n&&B(t.prototype,n),e}();function V(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var N=new(function(){function e(t){var n=t.baseUrl,r=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=n,this._headers=r}var t,n;return t=e,(n=[{key:"getInitialCards",value:function(){return p("".concat(this._baseUrl,"/cards"),{headers:this._headers})}},{key:"getUserInfo",value:function(){return p("".concat(this._baseUrl,"/users/me"),{headers:this._headers})}},{key:"editUserInfo",value:function(e){return p("".concat(this._baseUrl,"/users/me"),{headers:this._headers,method:"PATCH",body:JSON.stringify(e)})}},{key:"editAvatar",value:function(e){return p("".concat(this._baseUrl,"/users/me/avatar"),{headers:this._headers,method:"PATCH",body:JSON.stringify({avatar:e})})}},{key:"createCard",value:function(e){return p("".concat(this._baseUrl,"/cards"),{headers:this._headers,method:"POST",body:JSON.stringify(e)})}},{key:"deleteCard",value:function(e){return p("".concat(this._baseUrl,"/cards/").concat(e),{headers:this._headers,method:"DELETE"})}},{key:"addLikes",value:function(e){return p("".concat(this._baseUrl,"/cards/likes/").concat(e),{headers:this._headers,method:"PUT"})}},{key:"removeLikes",value:function(e){return p("".concat(this._baseUrl,"/cards/likes/").concat(e),{headers:this._headers,method:"DELETE"})}}])&&V(t.prototype,n),e}())({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"a422b90c-eef7-4772-9177-7c895e07d221","Content-Type":"application/json"}});function M(e){return M="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},M(e)}function J(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function $(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function H(e,t,n){return H="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=F(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}},H(e,t,n||e)}function z(e,t){return z=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},z(e,t)}function Y(e,t){if(t&&("object"===M(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function F(e){return F=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},F(e)}var G=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&z(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=F(r);if(o){var n=F(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return Y(this,e)});function a(){return J(this,a),i.apply(this,arguments)}return t=a,(n=[{key:"setAction",value:function(e){this._handleSubmit=e}},{key:"setEventListeners",value:function(){var e=this;this._popupElement.addEventListener("submit",(function(t){t.preventDefault(),e._handleSubmit()})),H(F(a.prototype),"setEventListeners",this).call(this)}}])&&$(t.prototype,n),a}(m);function K(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var Q,W=function(){function e(t,n,r,o,i,a){var u,c,l=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),c=function(){return l._cardElement=l._cardTemplate.cloneNode(!0),l._cardTitle=l._cardElement.querySelector(".card__location"),l._cardImage=l._cardElement.querySelector(".card__image"),l._cardTitle.textContent=l._name,l._cardImage.src=l._link,l._cardImage.alt=l._name,l._ownerId!==l._userId&&(l._cardElement.querySelector(".card__remove").style.display="none"),l._renderLikes(),l._setEventListeners(),l._cardElement},(u="createCardElement")in this?Object.defineProperty(this,u,{value:c,enumerable:!0,configurable:!0,writable:!0}):this[u]=c,this._name=t.name,this._link=t.link,this._likes=t.likes,this._templateCardSelector=n,this._handleCardClick=r,this._handleRemoveCard=i,this._handleLikeButton=o,this._id=t._id,this._userId=a,this._ownerId=t.owner._id,this._cardTemplate=document.querySelector(n).content.querySelector(".card")}var t,n;return t=e,(n=[{key:"isLiked",value:function(){var e=this;return this._likes.some((function(t){return t._id===e._userId}))}},{key:"_renderLikes",value:function(){this._cardElement.querySelector(".card__likes-count").textContent=this._likes.length,this.isLiked()?this._cardElement.querySelector(".card__like").classList.add("button_filled"):this._cardElement.querySelector(".card__like").classList.remove("button_filled")}},{key:"addLikes",value:function(e){this._likes=e,this._renderLikes()}},{key:"removeCard",value:function(){this._cardElement.remove(),this._cardElement=null}},{key:"_setEventListeners",value:function(){var e=this;this._cardImage=this._cardElement.querySelector(".card__image"),this._removeButton=this._cardElement.querySelector(".card__remove"),this._likeButton=this._cardElement.querySelector(".card__like"),this._likeButton.addEventListener("click",(function(){return e._handleLikeButton(e._id)})),this._removeButton.addEventListener("click",(function(){return e._handleRemoveCard(e._id)})),this._cardImage.addEventListener("click",this._handleCardClick)}}])&&K(t.prototype,n),e}();function X(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}Promise.all([N.getInitialCards(),N.getUserInfo()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,u=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){u=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(u)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return X(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?X(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];Q=i._id,le.renderer(o),ae.setUserInfo({name:i.name,about:i.about,avatar:i.avatar})}));var Z=new L(e,t),ee=new L(e,n),te=new L(e,r),ne=new x(".popup_type_image"),re=new O(".popup_type_add-card",(function(e){d("Saving..."),N.createCard({name:e["card-title"],link:e["card-link"]}).then((function(e){le.addItem(ce(e))})).catch((function(e){console.log("err in then above")})).then((function(){d("Create"),re.close()}))})),oe=new G(".popup_type_remove-card"),ie=new O(".popup_type_edit-avatar",(function(e){d("Saving..."),N.editAvatar(e["image-link"]).then((function(e){ae.setUserInfo(e)})).catch((function(e){console.log("err in then above")})).then((function(){d("Save"),ie.close()}))}));u.addEventListener("click",(function(){var e=ae.getUserInfo();s.value=e.userName,f.value=e.userProfession,ue.open()})),c.addEventListener("click",(function(){re.open()})),l.addEventListener("click",(function(){ie.open()})),Z.enableValidation(),ee.enableValidation(),te.enableValidation(),Z.resetValidation(),ee.resetValidation(),te.resetValidation(),ne.setEventListeners(),re.setEventListeners(),ie.setEventListeners(),oe.setEventListeners();var ae=new D(".edit-name",".profile-info__profession",".avatar__image"),ue=new O(".popup_type_edit-profile",(function(e){d("Saving..."),N.editUserInfo({name:e.name,about:e.profession}).then((function(e){ae.setUserInfo({name:e.name,about:e.about,avatar:e.avatar})})).catch((function(e){console.log("err in then above")})).then((function(){d("Save"),ue.close()}))}));function ce(e){var t=new W(e,".card-template",(function(){ne.open(e.link,e.name)}),(function(e){t.isLiked()?N.removeLikes(e).then((function(e){t.addLikes(e.likes)})):N.addLikes(e).then((function(e){t.addLikes(e.likes)}))}),(function(e){oe.open(),oe.setAction((function(){d("Deleting..."),N.deleteCard(e).then((function(e){t.removeCard()})).catch((function(e){console.log("err in then above")})).then((function(){d("Yes"),oe.close()}))}))}),Q);return t.createCardElement()}ue.setEventListeners();var le=new h({renderer:function(e){le.addItem(ce(e))}},".card-list")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,