(()=>{"use strict";var e={d:(t,n)=>{for(var r in n)e.o(n,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:n[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};e.d({},{w$:()=>ae,$P:()=>oe,xS:()=>X});var t={inputSelector:".field-input",submitButtonSelector:".popup__save"},n=document.querySelector(".popup_type_edit-profile"),r=document.querySelector(".popup_type_add-card"),o=document.querySelector(".popup_type_edit-avatar"),i=(document.querySelector(".card-template").content.querySelector(".card"),document.querySelector(".card-list"),document.querySelectorAll(".card"),document.querySelector(".popup_type_edit-profile")),a=document.querySelector(".popup_type_add-card"),u=document.querySelector(".popup_type_image"),c=(document.querySelector(".popup_opened"),i.querySelector(".popup__close"),a.querySelector(".popup__close"),u.querySelector(".popup__close"),document.querySelector(".edit-button")),l=document.querySelector(".add-button"),s=document.querySelector(".avatar"),f=i.querySelector(".field-input_type_name"),p=i.querySelector(".field-input_type_profession");function d(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}a.querySelector(".field-input_type_card-title"),a.querySelector(".field-input_type_card-link"),document.querySelector(".edit-name"),document.querySelector(".profile-info__profession"),document.querySelectorAll(".field-input"),i.querySelector(".popup__form"),a.querySelector(".popup__form"),u.querySelector(".popup__figure"),u.querySelector(".popup__image"),u.querySelector(".popup__caption");var y=function(){function e(t,n,r,o,i,a){var u,c,l=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),c=function(){return l._cardElement=l._cardTemplate.cloneNode(!0),l._cardTitle=l._cardElement.querySelector(".card__location"),l._cardImage=l._cardElement.querySelector(".card__image"),l._cardTitle.textContent=l._name,l._cardImage.src=l._link,l._cardImage.alt=l._name,l._ownerId!==l._userId&&(l._cardElement.querySelector(".card__remove").style.display="none"),l._cardElement.querySelector(".card__likes-count").textContent=l._likes.length,l.isLiked()&&l.likeCard(l._likes),l._setEventListeners(),l._cardElement},(u="createCardElement")in this?Object.defineProperty(this,u,{value:c,enumerable:!0,configurable:!0,writable:!0}):this[u]=c,this._name=t.name,this._link=t.link,this._likes=t.likes,this._templateCardSelector=n,this._handleCardClick=r,this._handleRemoveCard=i,this._handleLikeButton=o,this._id=t._id,this._userId=a,this._ownerId=t.owner._id,this._cardTemplate=document.querySelector(n).content.querySelector(".card")}var t,n;return t=e,(n=[{key:"isLiked",value:function(){var e=this;return this._likes.some((function(t){return t._id===e._userId}))}},{key:"likeCard",value:function(e){this._likes=e,this._cardElement.querySelector(".card__likes-count").textContent=this._likes.length,this._cardElement.querySelector(".card__like").classList.toggle("button_filled"),this._cardElement.querySelector(".card__like").classList.toggle("button_empty")}},{key:"removeCard",value:function(){this._cardElement.remove(),this._cardElement=null}},{key:"_setEventListeners",value:function(){var e=this;this._cardImage=this._cardElement.querySelector(".card__image"),this._removeButton=this._cardElement.querySelector(".card__remove"),this._likeButton=this._cardElement.querySelector(".card__like"),this._likeButton.addEventListener("click",(function(){return e._handleLikeButton(e._id)})),this._removeButton.addEventListener("click",(function(){return e._handleRemoveCard(e._id)})),this._cardImage.addEventListener("click",this._handleCardClick)}}])&&d(t.prototype,n),e}();function h(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var _=new(function(){function e(t){var n=t.baseUrl,r=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=n,this._headers=r}var t,n;return t=e,(n=[{key:"getInitialCards",value:function(){return v("".concat(this._baseUrl,"/cards"),{headers:this._headers})}},{key:"getUserInfo",value:function(){return v("".concat(this._baseUrl,"/users/me"),{headers:this._headers})}},{key:"editUserInfo",value:function(e){return v("".concat(this._baseUrl,"/users/me"),{headers:this._headers,method:"PATCH",body:JSON.stringify(e)})}},{key:"editAvatar",value:function(e){return v("".concat(this._baseUrl,"/users/me/avatar"),{headers:this._headers,method:"PATCH",body:JSON.stringify({avatar:e})})}},{key:"createCard",value:function(e){return v("".concat(this._baseUrl,"/cards"),{headers:this._headers,method:"POST",body:JSON.stringify(e)})}},{key:"deleteCard",value:function(e){return v("".concat(this._baseUrl,"/cards/").concat(e),{headers:this._headers,method:"DELETE"})}},{key:"likeCard",value:function(e){return v("".concat(this._baseUrl,"/cards/likes/").concat(e),{headers:this._headers,method:"PUT"})}},{key:"unlikeCard",value:function(e){return v("".concat(this._baseUrl,"/cards/likes/").concat(e),{headers:this._headers,method:"DELETE"})}}])&&h(t.prototype,n),e}())({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"a422b90c-eef7-4772-9177-7c895e07d221","Content-Type":"application/json"}});function m(e){var t=new y(e,".card-template",(function(){oe.open(e.link,e.name)}),(function(e){t.isLiked()?_.unlikeCard(e).then((function(e){t.likeCard(e.likes)})):_.likeCard(e).then((function(e){t.likeCard(e.likes)}))}),(function(e){ae.open(),ae.setAction((function(){b("Deleting..."),_.deleteCard(e).then((function(e){t.removeCard(),ae.close()})).finally(b("Yes"))}))}),X);return t.createCardElement()}var v=function(e,t){return fetch(e,t).then((function(e){return e.ok?e.json():Promise.reject(e.statusText)})).catch(console.log)};function b(e){document.querySelector(".popup_opened .popup__save").textContent=e}function g(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var E=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._container=document.querySelector(n),this._renderer=r}var t,n;return t=e,(n=[{key:"renderer",value:function(e){var t=this;e.length&&e.forEach((function(e){t._renderer(e)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&g(t.prototype,n),e}();function S(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var k=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popupElement=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"open",value:function(){this._popupElement.classList.add("popup_opened"),document.addEventListener("keyup",this._handleEscClose)}},{key:"close",value:function(){this._popupElement.classList.remove("popup_opened"),document.removeEventListener("keyup",this._handleEscClose)}},{key:"setEventListeners",value:function(){var e=this;this._popupElement.addEventListener("click",(function(t){!t.target.classList.contains("popup__close")&&t.target.closest(".popup__container")||e.close()}))}}])&&S(t.prototype,n),e}();function w(e){return w="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},w(e)}function O(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function C(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function q(e,t,n){return q="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=L(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}},q(e,t,n||e)}function j(e,t){return j=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},j(e,t)}function P(e,t){if(t&&("object"===w(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function L(e){return L=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},L(e)}var I=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&j(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=L(r);if(o){var n=L(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return P(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._submitHandler=t,n._form=n._popupElement.querySelector(".popup__form"),n}return t=a,(n=[{key:"_getInputValues",value:function(){var e,t=function(e){if(Array.isArray(e))return O(e)}(e=this._form.querySelectorAll(".field-input"))||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(e){if("string"==typeof e)return O(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?O(e,t):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),n={};return t.forEach((function(e){n[e.name]=e.value})),n}},{key:"setEventListeners",value:function(){var e=this;q(L(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._submitHandler(e._getInputValues()),e.close()}))}},{key:"close",value:function(){q(L(a.prototype),"close",this).call(this),this._form.reset()}}])&&C(t.prototype,n),a}(k);function A(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function T(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var R=function(){function e(t,n){var r,o,i=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),o=function(){var e,t=i._settings.inputSelector;i.inputs=function(e){if(Array.isArray(e))return A(e)}(e=i._formElement.querySelectorAll(t))||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(e){if("string"==typeof e)return A(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?A(e,t):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),i.inputs.forEach((function(e){e.addEventListener("input",(function(){i._checkValidity(e),i._toggleButtonState(i.inputs)}))}))},(r="_setEventListeners")in this?Object.defineProperty(this,r,{value:o,enumerable:!0,configurable:!0,writable:!0}):this[r]=o,this._settings=t,this._formElement=n}var t,n;return t=e,(n=[{key:"_showError",value:function(e){var t=e.validationMessage;this._formElement.querySelector("#".concat(e.id,"-error")).textContent=t}},{key:"_hideError",value:function(e){this._formElement.querySelector("#".concat(e.id,"-error")).textContent=""}},{key:"_checkValidity",value:function(e){e.validity.valid?this._hideError(e):this._showError(e)}},{key:"_toggleButtonState",value:function(){var e=this._settings.submitButtonSelector,t=this._formElement.querySelector(e),n=this.inputs.every((function(e){return e.validity.valid}));t.disabled=!n}},{key:"resetValidation",value:function(){var e=this;this.inputs.forEach((function(t){e._hideError(t)}))}},{key:"enableValidation",value:function(){this._formElement.addEventListener("submit",(function(e){return e.preventDefault()})),this._setEventListeners()}}])&&T(t.prototype,n),e}();function U(e){return U="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},U(e)}function x(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function B(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function D(e,t,n){return D="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=H(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}},D(e,t,n||e)}function V(e,t){return V=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},V(e,t)}function N(e,t){if(t&&("object"===U(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function H(e){return H=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},H(e)}var $=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&V(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=H(r);if(o){var n=H(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return N(this,e)});function a(){return x(this,a),i.apply(this,arguments)}return t=a,(n=[{key:"open",value:function(e,t){var n=this._popupElement.querySelector(".popup__image"),r=this._popupElement.querySelector(".popup__caption");n.src=e,n.alt=t,r.textContent=t,D(H(a.prototype),"open",this).call(this),D(H(a.prototype),"setEventListeners",this).call(this)}}])&&B(t.prototype,n),a}(k);function M(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var J=function(){function e(t,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._userNameElement=document.querySelector(t),this._userProfessionElement=document.querySelector(n),this._avatarSelectorElement=document.querySelector(r)}var t,n;return t=e,n=[{key:"getUserInfo",value:function(){return{userName:this._userNameElement.textContent,userProfession:this._userProfessionElement.textContent,userAvatar:this._avatarSelectorElement.src}}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.about,r=e.avatar;this._userNameElement.textContent=t,this._userProfessionElement.textContent=n,this._avatarSelectorElement.src=r}}],n&&M(t.prototype,n),e}();function z(e){return z="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},z(e)}function Y(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function F(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function G(e,t,n){return G="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=W(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}},G(e,t,n||e)}function K(e,t){return K=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},K(e,t)}function Q(e,t){if(t&&("object"===z(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function W(e){return W=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},W(e)}var X,Z=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&K(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=W(r);if(o){var n=W(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return Q(this,e)});function a(){return Y(this,a),i.apply(this,arguments)}return t=a,(n=[{key:"setAction",value:function(e){this._submitHandler=e}},{key:"setEventListeners",value:function(){var e=this;this._popupElement.addEventListener("submit",(function(t){t.preventDefault(),e._submitHandler()})),G(W(a.prototype),"setEventListeners",this).call(this)}}])&&F(t.prototype,n),a}(k);function ee(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}Promise.all([_.getInitialCards(),_.getUserInfo()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,u=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){u=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(u)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return ee(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?ee(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];X=i._id,se.renderer(o),ce.setUserInfo({name:i.name,about:i.about,avatar:i.avatar})}));var te=new R(t,n),ne=new R(t,r),re=new R(t,o),oe=new $(".popup_type_image"),ie=new I(".popup_type_add-card",(function(e){b("Saving..."),_.createCard({name:e["card-title"],link:e["card-link"]}).then((function(e){se.addItem(m(e))})).finally(b("Create"))})),ae=new Z(".popup_type_remove-card"),ue=new I(".popup_type_edit-avatar",(function(e){b("Saving..."),_.editAvatar(e["image-link"]).then((function(e){ce.setUserInfo(e)})).finally(b("Save"))}));c.addEventListener("click",(function(){var e=ce.getUserInfo();f.value=e.userName,p.value=e.userProfession,le.open()})),l.addEventListener("click",(function(){ie.open()})),s.addEventListener("click",(function(){ue.open()})),te.enableValidation(),ne.enableValidation(),re.enableValidation(),te.resetValidation(),ne.resetValidation(),re.resetValidation(),oe.setEventListeners(),ie.setEventListeners(),ue.setEventListeners(),ae.setEventListeners();var ce=new J(".edit-name",".profile-info__profession",".avatar__image"),le=new I(".popup_type_edit-profile",(function(e){b("Saving..."),_.editUserInfo({name:e.name,about:e.profession}).then((function(e){ce.setUserInfo({name:e.name,about:e.about,avatar:e.avatar})})).finally(b("Save")),le.close()}));le.setEventListeners();var se=new E({renderer:function(e){se.addItem(m(e))}},".card-list")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,